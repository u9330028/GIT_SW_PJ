#if !defined(AFX_NHMWIEMV_H__3AA632B6_46C6_41F6_96BF_1ED855F2BB41__INCLUDED_)
#define AFX_NHMWIEMV_H__3AA632B6_46C6_41F6_96BF_1ED855F2BB41__INCLUDED_

#if _MSC_VER > 1000
#pragma once
#endif // _MSC_VER > 1000
// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.

/////////////////////////////////////////////////////////////////////////////
// CNHMwiEmv wrapper class

class CNHMwiEmv : public CWnd
{
protected:
	DECLARE_DYNCREATE(CNHMwiEmv)
public:
	CLSID const& GetClsid()
	{
		static CLSID const clsid
			= { 0x14a6ed97, 0xe1a3, 0x442d, { 0x97, 0xf6, 0x7c, 0xfc, 0xf0, 0xe1, 0xb9, 0x15 } };
		return clsid;
	}
	virtual BOOL Create(LPCTSTR lpszClassName,
		LPCTSTR lpszWindowName, DWORD dwStyle,
		const RECT& rect,
		CWnd* pParentWnd, UINT nID,
		CCreateContext* pContext = NULL)
	{ return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID); }

    BOOL Create(LPCTSTR lpszWindowName, DWORD dwStyle,
		const RECT& rect, CWnd* pParentWnd, UINT nID,
		CFile* pPersist = NULL, BOOL bStorage = FALSE,
		BSTR bstrLicKey = NULL)
	{ return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID,
		pPersist, bStorage, bstrLicKey); }

// Attributes
public:

// Operations
public:
	CString TestMethod(LPCTSTR szParam1, LPCTSTR szParam2, LPCTSTR szParam3);
	void ProcSetDeviceEvent(LPCTSTR szDeviceName, LPCTSTR szEventName, LPCTSTR szEventValue);
	void ProcSetDeviceStatus(LPCTSTR szDeviceName, LPCTSTR szProperty, LPCTSTR szStatus);
	long McuInitialize();
	long McuDeinitialize();
	CString CheckDeviceAction(long nDevID, long nWaitSec);
	long ScanDeviceAction(long nDevID, long nWaitSec, long nEventKind);
	long GetErrorDevice(long nDevID);
	long GetTimeoutDevice(long nDevID);
	CString McuGetICData();
	long McuICEntryEnable(long nWaitSec);
	long McuICEntryDisable();
	long McuICSendData(long ProtocolID, LPCTSTR szSendData, long nWaitSec);
	long McuICChipInitialize();
	long ClearEventDevice(long nDevID);
	long ClearStatusDevice(long nDevID);
	long GetEventDevice(long nDevID);
	long GetStatusDevice(long nDevID);
	long EMV_SystemInitial();
	long EMV_Sel_BuildCandidateApp();
	long EMV_Sel_RemakeCandidateList();
	long EMV_Sel_GetAppList(BSTR* AppList);
	long EMV_Sel_FinalAppSelection(long iSelApp);
	long EMV_InitAppProcess(LPCTSTR TrProcCode, LPCTSTR TrAmount, LPCTSTR TrDateTime, long TrSerialCnt);
	long EMV_ReadAppData();
	long EMV_OffDataAuth();
	long EMV_ProcRestriction();
	long EMV_CardholderVerify1(LPCTSTR EncPinData);
	long EMV_TerminalRiskMgmt();
	long EMV_ActionAnalysis(BSTR* CardRslt);
	long EMV_CompleteProcess();
	long EMV_TransCloseProcess();
	long EMV_OnlineApproval(LPCTSTR ResponseCd, long ARPCLen, LPCTSTR ARPCData, long IsuScriptLen, LPCTSTR IsuScriptData);
	long EMV_DefaultApproval();
	CString EMV_GetVal(long Val_Id);
	CString EMV_GetTlvVal(long TagID);
	CString EMV_GetVData(long Val_Id);
	CString EMV_GetEmvHostData(long nType);
	long EMV_SetTranData(long BitID, LPCTSTR TranData);
	long EMV_OnlineApproval2(LPCTSTR ResponseCd, long ARPCLen, LPCTSTR ARPCData, long IsuScriptLen, LPCTSTR IsuScriptData);
	long EMV_TlvStoreVal(long nTid, LPCTSTR strVal);
	long EMV_SetKernelType(long nType);
	long EMV_Sel_SetOnlyOneAID(LPCTSTR strYN);
	long EMV_Sel_GetAppListEx(BSTR* AppList);
	long EMV_SetKernelLogPath(LPCTSTR PathName);
	long EMV_TerminalActionAnalysis(BSTR* TerminalCID);
	long EMV_CardActionAnalysis(BSTR* OnlineFlag);
	void EMV_Initial();
	long EMV_OnlineApproval3(LPCTSTR ResponseCd, long ARPCLen, LPCTSTR ARPCData, long IsuScriptLen, LPCTSTR IsuScriptData, LPCTSTR AcquirerCID);
	void AboutBox();
};

//{{AFX_INSERT_LOCATION}}
// Microsoft Visual C++ will insert additional declarations immediately before the previous line.

#endif // !defined(AFX_NHMWIEMV_H__3AA632B6_46C6_41F6_96BF_1ED855F2BB41__INCLUDED_)
