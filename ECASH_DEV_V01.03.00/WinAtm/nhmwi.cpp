// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.


#include "stdafx.h"
#include "nhmwi.h"

/////////////////////////////////////////////////////////////////////////////
// CNHMWI

IMPLEMENT_DYNCREATE(CNHMWI, CWnd)

/////////////////////////////////////////////////////////////////////////////
// CNHMWI properties

long CNHMWI::GetRejectMoneyTotalAmount()
{
	long result;
	GetProperty(0x1, VT_I4, (void*)&result);
	return result;
}

void CNHMWI::SetRejectMoneyTotalAmount(long propVal)
{
	SetProperty(0x1, VT_I4, propVal);
}

long CNHMWI::GetRejectMoneyTenThousand()
{
	long result;
	GetProperty(0x2, VT_I4, (void*)&result);
	return result;
}

void CNHMWI::SetRejectMoneyTenThousand(long propVal)
{
	SetProperty(0x2, VT_I4, propVal);
}

long CNHMWI::GetRejectMoneyFiveThousand()
{
	long result;
	GetProperty(0x3, VT_I4, (void*)&result);
	return result;
}

void CNHMWI::SetRejectMoneyFiveThousand(long propVal)
{
	SetProperty(0x3, VT_I4, propVal);
}

long CNHMWI::GetRejectMoneyOneThousand()
{
	long result;
	GetProperty(0x4, VT_I4, (void*)&result);
	return result;
}

void CNHMWI::SetRejectMoneyOneThousand(long propVal)
{
	SetProperty(0x4, VT_I4, propVal);
}

long CNHMWI::GetRejectMoneyCheck()
{
	long result;
	GetProperty(0x5, VT_I4, (void*)&result);
	return result;
}

void CNHMWI::SetRejectMoneyCheck(long propVal)
{
	SetProperty(0x5, VT_I4, propVal);
}

long CNHMWI::GetRejectMoneyUnknown()
{
	long result;
	GetProperty(0x6, VT_I4, (void*)&result);
	return result;
}

void CNHMWI::SetRejectMoneyUnknown(long propVal)
{
	SetProperty(0x6, VT_I4, propVal);
}

long CNHMWI::GetDepositMoneyStatus()
{
	long result;
	GetProperty(0x7, VT_I4, (void*)&result);
	return result;
}

void CNHMWI::SetDepositMoneyStatus(long propVal)
{
	SetProperty(0x7, VT_I4, propVal);
}

long CNHMWI::GetDepositMoneyTotalAmount()
{
	long result;
	GetProperty(0x8, VT_I4, (void*)&result);
	return result;
}

void CNHMWI::SetDepositMoneyTotalAmount(long propVal)
{
	SetProperty(0x8, VT_I4, propVal);
}

long CNHMWI::GetDepositMoneyTenThousand()
{
	long result;
	GetProperty(0x9, VT_I4, (void*)&result);
	return result;
}

void CNHMWI::SetDepositMoneyTenThousand(long propVal)
{
	SetProperty(0x9, VT_I4, propVal);
}

long CNHMWI::GetDepositMoneyFiveThousand()
{
	long result;
	GetProperty(0xa, VT_I4, (void*)&result);
	return result;
}

void CNHMWI::SetDepositMoneyFiveThousand(long propVal)
{
	SetProperty(0xa, VT_I4, propVal);
}

long CNHMWI::GetDepositMoneyOneThousand()
{
	long result;
	GetProperty(0xb, VT_I4, (void*)&result);
	return result;
}

void CNHMWI::SetDepositMoneyOneThousand(long propVal)
{
	SetProperty(0xb, VT_I4, propVal);
}

long CNHMWI::GetDepositMoneyUnknown()
{
	long result;
	GetProperty(0xc, VT_I4, (void*)&result);
	return result;
}

void CNHMWI::SetDepositMoneyUnknown(long propVal)
{
	SetProperty(0xc, VT_I4, propVal);
}

long CNHMWI::GetRetInfoStatus()
{
	long result;
	GetProperty(0xd, VT_I4, (void*)&result);
	return result;
}

void CNHMWI::SetRetInfoStatus(long propVal)
{
	SetProperty(0xd, VT_I4, propVal);
}

long CNHMWI::GetRetInfoActNum()
{
	long result;
	GetProperty(0xe, VT_I4, (void*)&result);
	return result;
}

void CNHMWI::SetRetInfoActNum(long propVal)
{
	SetProperty(0xe, VT_I4, propVal);
}

long CNHMWI::GetRetInfoRJTNum()
{
	long result;
	GetProperty(0xf, VT_I4, (void*)&result);
	return result;
}

void CNHMWI::SetRetInfoRJTNum(long propVal)
{
	SetProperty(0xf, VT_I4, propVal);
}

long CNHMWI::GetRetInfoTenThRJTNum()
{
	long result;
	GetProperty(0x10, VT_I4, (void*)&result);
	return result;
}

void CNHMWI::SetRetInfoTenThRJTNum(long propVal)
{
	SetProperty(0x10, VT_I4, propVal);
}

long CNHMWI::GetRetInfoFiveThRJTNum()
{
	long result;
	GetProperty(0x11, VT_I4, (void*)&result);
	return result;
}

void CNHMWI::SetRetInfoFiveThRJTNum(long propVal)
{
	SetProperty(0x11, VT_I4, propVal);
}

long CNHMWI::GetRetInfoOneThRJTNum()
{
	long result;
	GetProperty(0x12, VT_I4, (void*)&result);
	return result;
}

void CNHMWI::SetRetInfoOneThRJTNum(long propVal)
{
	SetProperty(0x12, VT_I4, propVal);
}

long CNHMWI::GetRetInfoCheckRJTNum()
{
	long result;
	GetProperty(0x13, VT_I4, (void*)&result);
	return result;
}

void CNHMWI::SetRetInfoCheckRJTNum(long propVal)
{
	SetProperty(0x13, VT_I4, propVal);
}

long CNHMWI::GetRetInfoUnknownRJTNum()
{
	long result;
	GetProperty(0x14, VT_I4, (void*)&result);
	return result;
}

void CNHMWI::SetRetInfoUnknownRJTNum(long propVal)
{
	SetProperty(0x14, VT_I4, propVal);
}

long CNHMWI::GetRejectMoneyHundredThousand()
{
	long result;
	GetProperty(0x15, VT_I4, (void*)&result);
	return result;
}

void CNHMWI::SetRejectMoneyHundredThousand(long propVal)
{
	SetProperty(0x15, VT_I4, propVal);
}

long CNHMWI::GetRejectMoneyFiftyThousand()
{
	long result;
	GetProperty(0x16, VT_I4, (void*)&result);
	return result;
}

void CNHMWI::SetRejectMoneyFiftyThousand(long propVal)
{
	SetProperty(0x16, VT_I4, propVal);
}

long CNHMWI::GetDepositMoneyHundredThousand()
{
	long result;
	GetProperty(0x17, VT_I4, (void*)&result);
	return result;
}

void CNHMWI::SetDepositMoneyHundredThousand(long propVal)
{
	SetProperty(0x17, VT_I4, propVal);
}

long CNHMWI::GetDepositMoneyFiftyThousand()
{
	long result;
	GetProperty(0x18, VT_I4, (void*)&result);
	return result;
}

void CNHMWI::SetDepositMoneyFiftyThousand(long propVal)
{
	SetProperty(0x18, VT_I4, propVal);
}

long CNHMWI::GetRetInfoHundredThRJTNum()
{
	long result;
	GetProperty(0x19, VT_I4, (void*)&result);
	return result;
}

void CNHMWI::SetRetInfoHundredThRJTNum(long propVal)
{
	SetProperty(0x19, VT_I4, propVal);
}

long CNHMWI::GetRetInfoFiftyThRJTNum()
{
	long result;
	GetProperty(0x1a, VT_I4, (void*)&result);
	return result;
}

void CNHMWI::SetRetInfoFiftyThRJTNum(long propVal)
{
	SetProperty(0x1a, VT_I4, propVal);
}

/////////////////////////////////////////////////////////////////////////////
// CNHMWI operations

CString CNHMWI::TestMethod(LPCTSTR szParam1, LPCTSTR szParam2, LPCTSTR szParam3)
{
	CString result;
	static BYTE parms[] =
		VTS_BSTR VTS_BSTR VTS_BSTR;
	InvokeHelper(0x1b, DISPATCH_METHOD, VT_BSTR, (void*)&result, parms,
		szParam1, szParam2, szParam3);
	return result;
}

void CNHMWI::ProcSetDeviceEvent()
{
	InvokeHelper(0x1c, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

void CNHMWI::ProcSetDeviceStatus()
{
	InvokeHelper(0x1d, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

long CNHMWI::McuEntryDisable()
{
	long result;
	InvokeHelper(0x1e, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

CString CNHMWI::McuGetCardData(long lDoNotUnPack)
{
	CString result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x1f, DISPATCH_METHOD, VT_BSTR, (void*)&result, parms,
		lDoNotUnPack);
	return result;
}

long CNHMWI::McuInitialize()
{
	long result;
	InvokeHelper(0x20, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::McuRead()
{
	long result;
	InvokeHelper(0x21, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::McuRetract()
{
	long result;
	InvokeHelper(0x22, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::McuWrite(LPCTSTR szTrackData)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x23, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		szTrackData);
	return result;
}

long CNHMWI::SprGetPaperStatus()
{
	long result;
	InvokeHelper(0x24, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::JprEmbossPrint()
{
	long result;
	InvokeHelper(0x25, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::JprGetPaperStatus()
{
	long result;
	InvokeHelper(0x26, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::JprInitialize()
{
	long result;
	InvokeHelper(0x27, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

CString CNHMWI::PbmGetMsData()
{
	CString result;
	InvokeHelper(0x28, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

long CNHMWI::PbmInitialize()
{
	long result;
	InvokeHelper(0x29, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::PbmRetract()
{
	long result;
	InvokeHelper(0x2a, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

BOOL CNHMWI::BrmCloseShutter()
{
	BOOL result;
	InvokeHelper(0x2b, DISPATCH_METHOD, VT_BOOL, (void*)&result, NULL);
	return result;
}

long CNHMWI::BrmGetAutoloadCondition()
{
	long result;
	InvokeHelper(0x2c, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::BrmGetNumberOfCash()
{
	long result;
	InvokeHelper(0x2d, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::BrmGetPosition()
{
	long result;
	InvokeHelper(0x2e, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::BrmGetRecycleBoxStatus()
{
	long result;
	InvokeHelper(0x2f, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

BOOL CNHMWI::BrmOpenShutter()
{
	BOOL result;
	InvokeHelper(0x30, DISPATCH_METHOD, VT_BOOL, (void*)&result, NULL);
	return result;
}

long CNHMWI::BrmReady()
{
	long result;
	InvokeHelper(0x31, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

BOOL CNHMWI::BrmReadyCount()
{
	BOOL result;
	InvokeHelper(0x32, DISPATCH_METHOD, VT_BOOL, (void*)&result, NULL);
	return result;
}

BOOL CNHMWI::BrmReadyDispense()
{
	BOOL result;
	InvokeHelper(0x33, DISPATCH_METHOD, VT_BOOL, (void*)&result, NULL);
	return result;
}

long CNHMWI::McuDeinitialize()
{
	long result;
	InvokeHelper(0x34, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

CString CNHMWI::CheckDeviceAction(long nDevID, long nWaitSec)
{
	CString result;
	static BYTE parms[] =
		VTS_I4 VTS_I4;
	InvokeHelper(0x35, DISPATCH_METHOD, VT_BSTR, (void*)&result, parms,
		nDevID, nWaitSec);
	return result;
}

long CNHMWI::McuWaitTaken()
{
	long result;
	InvokeHelper(0x36, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::SprDeinitialize()
{
	long result;
	InvokeHelper(0x37, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::SprWaitTaken()
{
	long result;
	InvokeHelper(0x38, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::PbmEject(long nWaitSec)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x39, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nWaitSec);
	return result;
}

long CNHMWI::PbmDeinitialize()
{
	long result;
	InvokeHelper(0x3a, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::PbmWaitTaken()
{
	long result;
	InvokeHelper(0x3b, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::BrmDeinitialize()
{
	long result;
	InvokeHelper(0x3c, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::BrmPresent(long nWaitSec)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x3d, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nWaitSec);
	return result;
}

long CNHMWI::BrmPresent2(long nWaitSec)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x3e, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nWaitSec);
	return result;
}

long CNHMWI::BrmCancelWaitTaken()
{
	long result;
	InvokeHelper(0x3f, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::BrmRefillMoney(long nNumNotes)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x40, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nNumNotes);
	return result;
}

long CNHMWI::BrmTakeupMoney(long nNumNotes)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x41, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nNumNotes);
	return result;
}

long CNHMWI::BrmGetMaterialInfo()
{
	long result;
	InvokeHelper(0x42, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::UcmGetDepCSTStatus()
{
	long result;
	InvokeHelper(0x43, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::UcmGetWithCSTStatus()
{
	long result;
	InvokeHelper(0x44, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

CString CNHMWI::UcmGetCheckDataDispensed(long nCheckNum)
{
	CString result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x45, DISPATCH_METHOD, VT_BSTR, (void*)&result, parms,
		nCheckNum);
	return result;
}

long CNHMWI::UcmGetPosition()
{
	long result;
	InvokeHelper(0x46, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::UcmInitialize(long nWaitSec)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x47, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nWaitSec);
	return result;
}

long CNHMWI::UcmWaitTaken()
{
	long result;
	InvokeHelper(0x48, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::UcmCancelAccept()
{
	long result;
	InvokeHelper(0x49, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::UcmRejectAll(long nWaitSec)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x4a, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nWaitSec);
	return result;
}

long CNHMWI::UpsInitialize()
{
	long result;
	InvokeHelper(0x4b, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::UpsDeinitialize()
{
	long result;
	InvokeHelper(0x4c, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::UpsGetPowerStatus()
{
	long result;
	InvokeHelper(0x4d, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::SplInitialize()
{
	long result;
	InvokeHelper(0x4e, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::SplDeinitialize()
{
	long result;
	InvokeHelper(0x4f, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::ScanDeviceAction(long nDevID, long nWaitSec, long nEventKind)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_I4;
	InvokeHelper(0x50, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nDevID, nWaitSec, nEventKind);
	return result;
}

long CNHMWI::McuEntryEnable(long nWaitSec)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x51, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nWaitSec);
	return result;
}

long CNHMWI::GetErrorDevice(long nDevID)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x52, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nDevID);
	return result;
}

long CNHMWI::McuGetMaterialInfo()
{
	long result;
	InvokeHelper(0x53, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::SprGetMaterialInfo()
{
	long result;
	InvokeHelper(0x54, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::JprGetMaterialInfo()
{
	long result;
	InvokeHelper(0x55, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::PbmGetMaterialInfo()
{
	long result;
	InvokeHelper(0x56, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::UcmGetMaterialInfo(long nDepWithFlag)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x57, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nDepWithFlag);
	return result;
}

long CNHMWI::SprInitialize()
{
	long result;
	InvokeHelper(0x58, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::UcmDeinitialize()
{
	long result;
	InvokeHelper(0x59, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::JprDeinitialize()
{
	long result;
	InvokeHelper(0x5a, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::McuEject(long nWaitSec)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x5b, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nWaitSec);
	return result;
}

long CNHMWI::SprPrint(LPCTSTR szFormName, LPCTSTR szPrintData)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR VTS_BSTR;
	InvokeHelper(0x5c, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		szFormName, szPrintData);
	return result;
}

long CNHMWI::JprPrint(LPCTSTR szFormName, LPCTSTR szPrintData)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR VTS_BSTR;
	InvokeHelper(0x5d, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		szFormName, szPrintData);
	return result;
}

long CNHMWI::PbmPrint(LPCTSTR szFormName, LPCTSTR szPrintData)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR VTS_BSTR;
	InvokeHelper(0x5e, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		szFormName, szPrintData);
	return result;
}

long CNHMWI::BrmWaitLift()
{
	long result;
	InvokeHelper(0x5f, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::BrmWaitTaken()
{
	long result;
	InvokeHelper(0x60, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::UcmOpenShutter(long nWaitSec)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x61, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nWaitSec);
	return result;
}

long CNHMWI::UcmCloseShutter(long nWaitSec)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x62, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nWaitSec);
	return result;
}

long CNHMWI::ProcBackupTrace(LPCTSTR szFileName, long nFileSize)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR VTS_I4;
	InvokeHelper(0x63, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		szFileName, nFileSize);
	return result;
}

long CNHMWI::UcmCancelWaitTaken()
{
	long result;
	InvokeHelper(0x64, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::JprGetDeviceStatus()
{
	long result;
	InvokeHelper(0x65, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::SprGetDeviceStatus()
{
	long result;
	InvokeHelper(0x66, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::SprEject(long nWaitSec)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x67, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nWaitSec);
	return result;
}

long CNHMWI::SprRetract()
{
	long result;
	InvokeHelper(0x68, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::McuGetDeviceStatus()
{
	long result;
	InvokeHelper(0x69, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::UcmGetDeviceStatus()
{
	long result;
	InvokeHelper(0x6a, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::UcmGetAvailDeposit()
{
	long result;
	InvokeHelper(0x6b, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::UcmGetAvailWithdraw()
{
	long result;
	InvokeHelper(0x6c, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

CString CNHMWI::UcmGetACheckData()
{
	CString result;
	InvokeHelper(0x6d, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

long CNHMWI::UcmAccept(long nWaitSec)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x6e, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nWaitSec);
	return result;
}

long CNHMWI::UcmRead()
{
	long result;
	InvokeHelper(0x6f, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::UcmEscrow(LPCTSTR szPrintData)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x70, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		szPrintData);
	return result;
}

long CNHMWI::UcmStack()
{
	long result;
	InvokeHelper(0x71, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::UcmRejectA(long nWaitSec)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x72, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nWaitSec);
	return result;
}

long CNHMWI::UcmDispense(long nCheckCnt, LPCTSTR szPrintData)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_BSTR;
	InvokeHelper(0x73, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nCheckCnt, szPrintData);
	return result;
}

long CNHMWI::UcmPresent(long nWaitSec)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x74, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nWaitSec);
	return result;
}

long CNHMWI::BrmGetDeviceStatus()
{
	long result;
	InvokeHelper(0x75, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::BrmGetAvailDeposit()
{
	long result;
	InvokeHelper(0x76, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::BrmGetAvailWithdraw()
{
	long result;
	InvokeHelper(0x77, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::BrmAccept(long nCashCnt)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x78, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nCashCnt);
	return result;
}

long CNHMWI::BrmCount()
{
	long result;
	InvokeHelper(0x79, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::BrmStack()
{
	long result;
	InvokeHelper(0x7a, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::BrmReject(long nWaitSec)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x7b, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nWaitSec);
	return result;
}

long CNHMWI::BrmRetract()
{
	long result;
	InvokeHelper(0x7c, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::BrmDispense(long nCashCnt)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x7d, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nCashCnt);
	return result;
}

long CNHMWI::PbmGetDeviceStatus()
{
	long result;
	InvokeHelper(0x7e, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

CString CNHMWI::PbmGetBarData()
{
	CString result;
	InvokeHelper(0x7f, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

CString CNHMWI::PbmGetLineData()
{
	CString result;
	InvokeHelper(0x80, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

long CNHMWI::PbmEntryDisable()
{
	long result;
	InvokeHelper(0x81, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::PbmEntryEnable(long nWaitSec)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x82, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nWaitSec);
	return result;
}

long CNHMWI::PbmRead()
{
	long result;
	InvokeHelper(0x83, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::CmrInitialize()
{
	long result;
	InvokeHelper(0x84, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::CmrDeinitialize()
{
	long result;
	InvokeHelper(0x85, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::CmrGetDeviceStatus()
{
	long result;
	InvokeHelper(0x86, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::CmrCaptureFace(LPCTSTR szFileName)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x87, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		szFileName);
	return result;
}

long CNHMWI::CmrCaptureHand(LPCTSTR szFileName)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x88, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		szFileName);
	return result;
}

long CNHMWI::DorInitialize()
{
	long result;
	InvokeHelper(0x89, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::DorDeinitialize()
{
	long result;
	InvokeHelper(0x8a, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::DorGetDeviceStatus()
{
	long result;
	InvokeHelper(0x8b, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::DorGetDoorStatus(long nDoor)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x8c, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nDoor);
	return result;
}

long CNHMWI::LgtInitialize()
{
	long result;
	InvokeHelper(0x8d, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::LgtDeinitialize()
{
	long result;
	InvokeHelper(0x8e, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::LgtSetFlicker(long nIndex, long nValue)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_I4;
	InvokeHelper(0x8f, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nIndex, nValue);
	return result;
}

long CNHMWI::LgtSetIndicator(long nValue)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x90, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nValue);
	return result;
}

long CNHMWI::SplSetSegment(LPCTSTR szValue)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x91, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		szValue);
	return result;
}

long CNHMWI::SplSetLed(LPCTSTR szValue)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x92, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		szValue);
	return result;
}

long CNHMWI::SplSetRpl(LPCTSTR szValue)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x93, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		szValue);
	return result;
}

long CNHMWI::SplSetInform(LPCTSTR szValue)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x94, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		szValue);
	return result;
}

long CNHMWI::UpsGetDeviceStatus()
{
	long result;
	InvokeHelper(0x95, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

CString CNHMWI::BrmGetCountResult()
{
	CString result;
	InvokeHelper(0x96, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

CString CNHMWI::BrmGetRetractResult()
{
	CString result;
	InvokeHelper(0x97, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

CString CNHMWI::BrmGetRefillResult()
{
	CString result;
	InvokeHelper(0x98, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

CString CNHMWI::BrmGetTakeupResult()
{
	CString result;
	InvokeHelper(0x99, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

long CNHMWI::McuCancelWaitTaken()
{
	long result;
	InvokeHelper(0x9a, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::BrmCheckThroat()
{
	long result;
	InvokeHelper(0x9b, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::UcmRetract(long nDepWithFlag)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x9c, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nDepWithFlag);
	return result;
}

long CNHMWI::UcmCheckThroat(long nDepWithFlag)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x9d, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nDepWithFlag);
	return result;
}

CString CNHMWI::BrmGetErrorCode()
{
	CString result;
	InvokeHelper(0x9e, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

CString CNHMWI::UcmGetErrorCode()
{
	CString result;
	InvokeHelper(0x9f, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

CString CNHMWI::PbmGetErrorCode()
{
	CString result;
	InvokeHelper(0xa0, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

CString CNHMWI::McuGetErrorCode()
{
	CString result;
	InvokeHelper(0xa1, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

CString CNHMWI::SprGetErrorCode()
{
	CString result;
	InvokeHelper(0xa2, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

CString CNHMWI::JprGetErrorCode()
{
	CString result;
	InvokeHelper(0xa3, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

long CNHMWI::BrmClearErrorCode()
{
	long result;
	InvokeHelper(0xa4, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::UcmClearErrorCode()
{
	long result;
	InvokeHelper(0xa5, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::SprClearErrorCode()
{
	long result;
	InvokeHelper(0xa6, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::JprClearErrorCode()
{
	long result;
	InvokeHelper(0xa7, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::McuClearErrorCode()
{
	long result;
	InvokeHelper(0xa8, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::PbmClearErrorCode()
{
	long result;
	InvokeHelper(0xa9, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::CmrClearErrorCode()
{
	long result;
	InvokeHelper(0xaa, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::UpsClearErrorCode()
{
	long result;
	InvokeHelper(0xab, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::DorClearErrorCode()
{
	long result;
	InvokeHelper(0xac, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::BrmGetChangeUnitLock()
{
	long result;
	InvokeHelper(0xad, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::BrmInitialize()
{
	long result;
	InvokeHelper(0xae, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::BrmGetClerkCSTStatus()
{
	long result;
	InvokeHelper(0xaf, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::BrmGetRejectCSTStatus()
{
	long result;
	InvokeHelper(0xb0, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::BrmGetAcceptCountStatus()
{
	long result;
	InvokeHelper(0xb1, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

CString CNHMWI::JprGetSensorInfo()
{
	CString result;
	InvokeHelper(0xb2, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

CString CNHMWI::SprGetSensorInfo()
{
	CString result;
	InvokeHelper(0xb3, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

CString CNHMWI::McuGetSensorInfo()
{
	CString result;
	InvokeHelper(0xb4, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

CString CNHMWI::PbmGetSensorInfo()
{
	CString result;
	InvokeHelper(0xb5, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

CString CNHMWI::UcmGetSensorInfo()
{
	CString result;
	InvokeHelper(0xb6, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

CString CNHMWI::BrmGetSensorInfo()
{
	CString result;
	InvokeHelper(0xb7, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

long CNHMWI::SprClearRetractCnt()
{
	long result;
	InvokeHelper(0xb8, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::McuClearRetractCnt()
{
	long result;
	InvokeHelper(0xb9, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::PbmClearRetractCnt()
{
	long result;
	InvokeHelper(0xba, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

CString CNHMWI::CmrGetErrorCode()
{
	CString result;
	InvokeHelper(0xbb, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

CString CNHMWI::DorGetErrorCode()
{
	CString result;
	InvokeHelper(0xbc, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

CString CNHMWI::UpsGetErrorCode()
{
	CString result;
	InvokeHelper(0xbd, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

CString CNHMWI::SprGetRetractCnt()
{
	CString result;
	InvokeHelper(0xbe, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

CString CNHMWI::McuGetRetractCnt()
{
	CString result;
	InvokeHelper(0xbf, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

CString CNHMWI::PbmGetRetractCnt()
{
	CString result;
	InvokeHelper(0xc0, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

long CNHMWI::ScrInitialize()
{
	long result;
	InvokeHelper(0xc1, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

CString CNHMWI::ScrGetKeyString(long nWaitSec)
{
	CString result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0xc2, DISPATCH_METHOD, VT_BSTR, (void*)&result, parms,
		nWaitSec);
	return result;
}

long CNHMWI::ScrSetData(LPCTSTR szDataName, LPCTSTR szDataValue)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR VTS_BSTR;
	InvokeHelper(0xc3, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		szDataName, szDataValue);
	return result;
}

long CNHMWI::ScrDisplayScreen(LPCTSTR szTag, long nIndex, LPCTSTR szData)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR VTS_I4 VTS_BSTR;
	InvokeHelper(0xc4, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		szTag, nIndex, szData);
	return result;
}

long CNHMWI::SplSetLedOnOff(long nLedIndex, long nOnOff)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_I4;
	InvokeHelper(0xc5, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nLedIndex, nOnOff);
	return result;
}

long CNHMWI::PbmBarLineRead()
{
	long result;
	InvokeHelper(0xc6, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::PbmCancelWaitTaken()
{
	long result;
	InvokeHelper(0xc7, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::SprCancelWaitTaken()
{
	long result;
	InvokeHelper(0xc8, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::UpsPowerOff(long nWaitSec)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0xc9, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nWaitSec);
	return result;
}

long CNHMWI::UpsPowerRestart(long nWaitSec, long nRestartSec)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_I4;
	InvokeHelper(0xca, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nWaitSec, nRestartSec);
	return result;
}

long CNHMWI::SplGetTestKey()
{
	long result;
	InvokeHelper(0xcb, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::SplGetLoadSwitch()
{
	long result;
	InvokeHelper(0xcc, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::LgtClearErrorCode()
{
	long result;
	InvokeHelper(0xcd, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::LgtGetDeviceStatus()
{
	long result;
	InvokeHelper(0xce, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

CString CNHMWI::LgtGetErrorCode()
{
	CString result;
	InvokeHelper(0xcf, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

CString CNHMWI::SplGetErrorCode()
{
	CString result;
	InvokeHelper(0xd0, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

long CNHMWI::SplGetDeviceStatus()
{
	long result;
	InvokeHelper(0xd1, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::SplClearErrorCode()
{
	long result;
	InvokeHelper(0xd2, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

CString CNHMWI::ScrGetScreenData(long nWaitSec)
{
	CString result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0xd3, DISPATCH_METHOD, VT_BSTR, (void*)&result, parms,
		nWaitSec);
	return result;
}

long CNHMWI::ScrSetScreenData(LPCTSTR szDataName, LPCTSTR szDataValue)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR VTS_BSTR;
	InvokeHelper(0xd4, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		szDataName, szDataValue);
	return result;
}

long CNHMWI::ScrSetDisplayData(LPCTSTR szDataName, LPCTSTR szDataValue)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR VTS_BSTR;
	InvokeHelper(0xd5, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		szDataName, szDataValue);
	return result;
}

CString CNHMWI::ScrGetKeyData(long nWaitSec)
{
	CString result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0xd6, DISPATCH_METHOD, VT_BSTR, (void*)&result, parms,
		nWaitSec);
	return result;
}

long CNHMWI::ScrClearKeyData()
{
	long result;
	InvokeHelper(0xd7, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::GetTimeoutDevice(long nDevID)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0xd8, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nDevID);
	return result;
}

long CNHMWI::IrdInitialize()
{
	long result;
	InvokeHelper(0xd9, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::IrdDeinitialize()
{
	long result;
	InvokeHelper(0xda, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::IrdEntryEnable()
{
	long result;
	InvokeHelper(0xdb, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::IrdEntryDisable()
{
	long result;
	InvokeHelper(0xdc, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::IrdReady()
{
	long result;
	InvokeHelper(0xdd, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::IrdVersion()
{
	long result;
	InvokeHelper(0xde, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::IrdTest()
{
	long result;
	InvokeHelper(0xdf, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

CString CNHMWI::IrdGetData()
{
	CString result;
	InvokeHelper(0xe0, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

long CNHMWI::IrdGetDataOK()
{
	long result;
	InvokeHelper(0xe1, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::IrdGetDeviceStatus()
{
	long result;
	InvokeHelper(0xe2, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::FngInitialize()
{
	long result;
	InvokeHelper(0xe3, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::FngDeinitialize()
{
	long result;
	InvokeHelper(0xe4, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::FngAcquire()
{
	long result;
	InvokeHelper(0xe5, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

CString CNHMWI::FngGetData()
{
	CString result;
	InvokeHelper(0xe6, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

long CNHMWI::FngCancelAcquire()
{
	long result;
	InvokeHelper(0xe7, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::FngShowData(LPCTSTR ShowFlag)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0xe8, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		ShowFlag);
	return result;
}

long CNHMWI::FngShowSize(long XPos, long YPos, long WideSize, long HeightSize)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_I4 VTS_I4;
	InvokeHelper(0xe9, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		XPos, YPos, WideSize, HeightSize);
	return result;
}

long CNHMWI::FngShowColor(long RedDegree, long GreenDegree, long BlueDegree)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_I4;
	InvokeHelper(0xea, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		RedDegree, GreenDegree, BlueDegree);
	return result;
}

long CNHMWI::FngSetMode(LPCTSTR SecurityMode)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0xeb, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		SecurityMode);
	return result;
}

CString CNHMWI::FngGetErrorCode()
{
	CString result;
	InvokeHelper(0xec, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

long CNHMWI::FngClearErrorCode()
{
	long result;
	InvokeHelper(0xed, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

CString CNHMWI::McuGetICData()
{
	CString result;
	InvokeHelper(0xee, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

long CNHMWI::McuICEntryEnable(long nWaitSec)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0xef, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nWaitSec);
	return result;
}

long CNHMWI::McuICEntryDisable()
{
	long result;
	InvokeHelper(0xf0, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::McuICSendData(long ProtocolID, LPCTSTR szSendData, long nWaitSec)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_BSTR VTS_I4;
	InvokeHelper(0xf1, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		ProtocolID, szSendData, nWaitSec);
	return result;
}

CString CNHMWI::IrdGetErrorCode()
{
	CString result;
	InvokeHelper(0xf2, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

long CNHMWI::IrdClearErrorCode()
{
	long result;
	InvokeHelper(0xf3, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::FngGetDeviceStatus()
{
	long result;
	InvokeHelper(0xf4, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::McuICChipInitialize()
{
	long result;
	InvokeHelper(0xf5, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::DesInitialize()
{
	long result;
	InvokeHelper(0xf6, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::DesDeinitialize()
{
	long result;
	InvokeHelper(0xf7, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

CString CNHMWI::DesGetErrorCode()
{
	CString result;
	InvokeHelper(0xf8, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

long CNHMWI::DesClearErrorCode()
{
	long result;
	InvokeHelper(0xf9, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::DesGetDeviceStatus()
{
	long result;
	InvokeHelper(0xfa, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::DesFunction(LPCTSTR szKeyData, LPCTSTR szPinNum, long nPinSize, LPCTSTR szmemberNum, long nParam, long nDesKind)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR VTS_BSTR VTS_I4 VTS_BSTR VTS_I4 VTS_I4;
	InvokeHelper(0xfb, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		szKeyData, szPinNum, nPinSize, szmemberNum, nParam, nDesKind);
	return result;
}

CString CNHMWI::DesGetData()
{
	CString result;
	InvokeHelper(0xfc, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

long CNHMWI::BarInitialize()
{
	long result;
	InvokeHelper(0xfd, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::BarDeinitialize()
{
	long result;
	InvokeHelper(0xfe, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::BarGetDeviceStatus()
{
	long result;
	InvokeHelper(0xff, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::BarClearErrorCode()
{
	long result;
	InvokeHelper(0x100, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

CString CNHMWI::BarGetErrorCode()
{
	CString result;
	InvokeHelper(0x101, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

long CNHMWI::BarEntryEnable()
{
	long result;
	InvokeHelper(0x102, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::BarEntryDisable()
{
	long result;
	InvokeHelper(0x103, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

CString CNHMWI::BarGetData()
{
	CString result;
	InvokeHelper(0x104, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

CString CNHMWI::IrdGetInfStatusData()
{
	CString result;
	InvokeHelper(0x105, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

long CNHMWI::IrdGetVersion()
{
	long result;
	InvokeHelper(0x106, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

CString CNHMWI::IrdGetVersionData()
{
	CString result;
	InvokeHelper(0x107, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

long CNHMWI::PinInitialize()
{
	long result;
	InvokeHelper(0x108, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::PinDeinitialize()
{
	long result;
	InvokeHelper(0x109, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

CString CNHMWI::PinGetErrorCode()
{
	CString result;
	InvokeHelper(0x10a, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

long CNHMWI::PinClearErrorCode()
{
	long result;
	InvokeHelper(0x10b, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::PinGetDeviceStatus()
{
	long result;
	InvokeHelper(0x10c, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::PinEntryDisable()
{
	long result;
	InvokeHelper(0x10d, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::PinEntryEnable(long nEnableMode, long nMinKeyCount, long nMaxKeyCount, long bAutoEnd, LPCTSTR szActiveKeys, LPCTSTR szTerminatorKeys, LPCTSTR szCardData, long nTimeout, LPCTSTR szXORData, LPCTSTR szBuildPinBlockKey, 
		LPCTSTR szBuildPinBlockEncKey)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_I4 VTS_I4 VTS_BSTR VTS_BSTR VTS_BSTR VTS_I4 VTS_BSTR VTS_BSTR VTS_BSTR;
	InvokeHelper(0x10e, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nEnableMode, nMinKeyCount, nMaxKeyCount, bAutoEnd, szActiveKeys, szTerminatorKeys, szCardData, nTimeout, szXORData, szBuildPinBlockKey, szBuildPinBlockEncKey);
	return result;
}

CString CNHMWI::PinGetPinKeyData()
{
	CString result;
	InvokeHelper(0x10f, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

long CNHMWI::PinMacingData(LPCTSTR szMacData, LPCTSTR szKey, LPCTSTR szAlgorithm)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR VTS_BSTR VTS_BSTR;
	InvokeHelper(0x110, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		szMacData, szKey, szAlgorithm);
	return result;
}

CString CNHMWI::PinGetMacingData()
{
	CString result;
	InvokeHelper(0x111, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

long CNHMWI::PinLoadIV(LPCTSTR szKeyName)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x112, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		szKeyName);
	return result;
}

long CNHMWI::PinLoadKey(LPCTSTR szKeyName, LPCTSTR szKeyValue)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR VTS_BSTR;
	InvokeHelper(0x113, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		szKeyName, szKeyValue);
	return result;
}

long CNHMWI::CduInitialize()
{
	long result;
	InvokeHelper(0x114, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::CduDeinitialize()
{
	long result;
	InvokeHelper(0x115, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::CduOpenShutter()
{
	long result;
	InvokeHelper(0x116, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::CduCloseShutter()
{
	long result;
	InvokeHelper(0x117, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::CduWaitTaken()
{
	long result;
	InvokeHelper(0x118, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::CduCancelWaitTaken()
{
	long result;
	InvokeHelper(0x119, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::CduRetract()
{
	long result;
	InvokeHelper(0x11a, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::CduDispenseCount(long nCST1Cnt, long nCST2Cnt, long nCST3Cnt, long nCST4Cnt)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_I4 VTS_I4;
	InvokeHelper(0x11b, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nCST1Cnt, nCST2Cnt, nCST3Cnt, nCST4Cnt);
	return result;
}

CString CNHMWI::CduGetDispenseOfCST(long nAmount)
{
	CString result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x11c, DISPATCH_METHOD, VT_BSTR, (void*)&result, parms,
		nAmount);
	return result;
}

long CNHMWI::CduDispenseAmount(long nAmount)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x11d, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nAmount);
	return result;
}

long CNHMWI::CduPresent(long nWaitSec)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x11e, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nWaitSec);
	return result;
}

CString CNHMWI::CduGetErrorCode()
{
	CString result;
	InvokeHelper(0x11f, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

CString CNHMWI::CduGetSensorInfo()
{
	CString result;
	InvokeHelper(0x120, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

long CNHMWI::CduGetDeviceStatus()
{
	long result;
	InvokeHelper(0x121, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::CduGetPosition(long nCduType)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x122, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nCduType);
	return result;
}

long CNHMWI::CduGetRejectCSTStatus()
{
	long result;
	InvokeHelper(0x123, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::CduGetRecycleBoxStatus()
{
	long result;
	InvokeHelper(0x124, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::CduGetCSTStatus(long nType)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x125, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nType);
	return result;
}

long CNHMWI::CduGetNumberOfCST()
{
	long result;
	InvokeHelper(0x126, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::CduGetValueOfCash(long nCSTNo)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x127, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nCSTNo);
	return result;
}

long CNHMWI::CduGetNumberOfCash(long nCSTNo)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x128, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nCSTNo);
	return result;
}

long CNHMWI::CduGetNumberOfSetCash(long nCSTNo)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x129, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nCSTNo);
	return result;
}

long CNHMWI::CduGetMaterialInfo()
{
	long result;
	InvokeHelper(0x12a, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::CduGetAvailWithdraw()
{
	long result;
	InvokeHelper(0x12b, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::CduClearErrorCode()
{
	long result;
	InvokeHelper(0x12c, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::CduSetNumberOfCash(LPCTSTR szCashCntData)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x12d, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		szCashCntData);
	return result;
}

long CNHMWI::CduSetMinMaxCST(LPCTSTR szMinCntData, LPCTSTR szMaxCntData)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR VTS_BSTR;
	InvokeHelper(0x12e, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		szMinCntData, szMaxCntData);
	return result;
}

long CNHMWI::DorGetCabinetStatus()
{
	long result;
	InvokeHelper(0x12f, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::CduDispenseCashCheckCount(long nCashCnt, long nCheckCnt)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_I4;
	InvokeHelper(0x130, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nCashCnt, nCheckCnt);
	return result;
}

long CNHMWI::A4pInitialize()
{
	long result;
	InvokeHelper(0x131, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::A4pDeinitialize()
{
	long result;
	InvokeHelper(0x132, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

CString CNHMWI::A4pGetErrorCode()
{
	CString result;
	InvokeHelper(0x133, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

long CNHMWI::A4pClearErrorCode()
{
	long result;
	InvokeHelper(0x134, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::A4pClearRetractCnt()
{
	long result;
	InvokeHelper(0x135, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

CString CNHMWI::A4pGetSensorInfo()
{
	CString result;
	InvokeHelper(0x136, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

long CNHMWI::A4pGetDeviceStatus()
{
	long result;
	InvokeHelper(0x137, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::A4pGetPaperStatus()
{
	long result;
	InvokeHelper(0x138, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::A4pGetMaterialInfo()
{
	long result;
	InvokeHelper(0x139, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

CString CNHMWI::A4pGetRetractCnt()
{
	CString result;
	InvokeHelper(0x13a, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

long CNHMWI::A4pPrint(LPCTSTR szForm, LPCTSTR szPrintData, long lDoNotPack)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR VTS_BSTR VTS_I4;
	InvokeHelper(0x13b, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		szForm, szPrintData, lDoNotPack);
	return result;
}

long CNHMWI::A4pEject(long nWaitSec)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x13c, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nWaitSec);
	return result;
}

long CNHMWI::A4pPrintAndEject(LPCTSTR szForm, LPCTSTR szPrintData, long nWaitSec, long lDoNotPack)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR VTS_BSTR VTS_I4 VTS_I4;
	InvokeHelper(0x13d, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		szForm, szPrintData, nWaitSec, lDoNotPack);
	return result;
}

long CNHMWI::A4pWaitTaken()
{
	long result;
	InvokeHelper(0x13e, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::A4pRetract()
{
	long result;
	InvokeHelper(0x13f, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::A4pCancelWaitTaken()
{
	long result;
	InvokeHelper(0x140, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::CmrGetPersonCameraStatus()
{
	long result;
	InvokeHelper(0x141, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::CmrGetExitSlotCameraStatus()
{
	long result;
	InvokeHelper(0x142, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::BrmReset(long bResetType)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x143, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		bResetType);
	return result;
}

BOOL CNHMWI::BrmReadyStore()
{
	BOOL result;
	InvokeHelper(0x144, DISPATCH_METHOD, VT_BOOL, (void*)&result, NULL);
	return result;
}

long CNHMWI::BrmSetCarrySpeed(long bHighSpeed)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x145, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		bHighSpeed);
	return result;
}

long CNHMWI::DvrInitialize()
{
	long result;
	InvokeHelper(0x146, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::DvrDeinitialize()
{
	long result;
	InvokeHelper(0x147, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::DvrClearErrorCode()
{
	long result;
	InvokeHelper(0x148, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

CString CNHMWI::DvrGetErrorCode()
{
	CString result;
	InvokeHelper(0x149, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

long CNHMWI::DvrGetDeviceStatus()
{
	long result;
	InvokeHelper(0x14a, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::DvrRecordStart(long nChannelIndex, LPCTSTR szFileName, long nTimeout)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_BSTR VTS_I4;
	InvokeHelper(0x14b, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nChannelIndex, szFileName, nTimeout);
	return result;
}

long CNHMWI::DvrRecordStop(long nChannelIndex, long nTimeout)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_I4;
	InvokeHelper(0x14c, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nChannelIndex, nTimeout);
	return result;
}

long CNHMWI::DvrTakePicture(long nChannelIndex, LPCTSTR szFileName, long nTimeout)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_BSTR VTS_I4;
	InvokeHelper(0x14d, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nChannelIndex, szFileName, nTimeout);
	return result;
}

long CNHMWI::VfdInitialize(long nPortNum, long nBaudRate)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_I4;
	InvokeHelper(0x14e, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nPortNum, nBaudRate);
	return result;
}

long CNHMWI::VfdDeinitialize()
{
	long result;
	InvokeHelper(0x14f, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::VfdInitializeDisplay()
{
	long result;
	InvokeHelper(0x150, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::VfdClearDisplay()
{
	long result;
	InvokeHelper(0x151, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::VfdSetBrightnessLevel(long nLevel)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x152, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nLevel);
	return result;
}

long CNHMWI::VfdScrollDisplay(long nShiftNum, long lnRepeatNum, long nInterval)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_I4;
	InvokeHelper(0x153, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nShiftNum, lnRepeatNum, nInterval);
	return result;
}

long CNHMWI::VfdBlinkDisplay(long nPattern, long nNormalTime, long nReverseTime, long nRepeatNumber)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_I4 VTS_I4;
	InvokeHelper(0x154, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nPattern, nNormalTime, nReverseTime, nRepeatNumber);
	return result;
}

long CNHMWI::VfdRealTimeTextDisplay(LPCTSTR szTextData, long nOffsetX, long nOffsetY, long nCharSzX, long nCharSzY, long nBoldStyle, long nItalic, LPCTSTR szFontName)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR VTS_I4 VTS_I4 VTS_I4 VTS_I4 VTS_I4 VTS_I4 VTS_BSTR;
	InvokeHelper(0x155, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		szTextData, nOffsetX, nOffsetY, nCharSzX, nCharSzY, nBoldStyle, nItalic, szFontName);
	return result;
}

long CNHMWI::VfdRealTimeBitImageDisplay(LPCTSTR szFileName, long nOffsetX, long nOffsetY)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR VTS_I4 VTS_I4;
	InvokeHelper(0x156, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		szFileName, nOffsetX, nOffsetY);
	return result;
}

long CNHMWI::VfdRealTimeTextBitImageDisplay(LPCTSTR szTextData, long nTxtOffsetX, long nOffsetY, long nCharSzX, long nCharSzY, long nBolStyle, long nItalic, LPCTSTR szFontName, LPCTSTR szFileName, long nImgOffsetX, long nImgOffsetY)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR VTS_I4 VTS_I4 VTS_I4 VTS_I4 VTS_I4 VTS_I4 VTS_BSTR VTS_BSTR VTS_I4 VTS_I4;
	InvokeHelper(0x157, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		szTextData, nTxtOffsetX, nOffsetY, nCharSzX, nCharSzY, nBolStyle, nItalic, szFontName, szFileName, nImgOffsetX, nImgOffsetY);
	return result;
}

long CNHMWI::VfdFROMTextSave(long nMemIndex, LPCTSTR szTextData, long nOffsetX, long nOffsetY, long nCharSzX, long nCharSzY, long nBoldStyle, long nItalic, LPCTSTR szFontName)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_BSTR VTS_I4 VTS_I4 VTS_I4 VTS_I4 VTS_I4 VTS_I4 VTS_BSTR;
	InvokeHelper(0x158, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nMemIndex, szTextData, nOffsetX, nOffsetY, nCharSzX, nCharSzY, nBoldStyle, nItalic, szFontName);
	return result;
}

long CNHMWI::VfdFROMBitImageSave(long nMemIndex, LPCTSTR szFileName, long nOffsetX, long nOffsetY)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_BSTR VTS_I4 VTS_I4;
	InvokeHelper(0x159, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nMemIndex, szFileName, nOffsetX, nOffsetY);
	return result;
}

long CNHMWI::VfdFROMTextBitImageSave(long nMemIndex, LPCTSTR szTextData, long nOffsetX, long nOffsetY, long nCharSzX, long nCharSzY, long nBolStyle, long nItalic, LPCTSTR szFontName, LPCTSTR szFileName, long nImgOffsetX, long nImgOffsetY)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_BSTR VTS_I4 VTS_I4 VTS_I4 VTS_I4 VTS_I4 VTS_I4 VTS_BSTR VTS_BSTR VTS_I4 VTS_I4;
	InvokeHelper(0x15a, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nMemIndex, szTextData, nOffsetX, nOffsetY, nCharSzX, nCharSzY, nBolStyle, nItalic, szFontName, szFileName, nImgOffsetX, nImgOffsetY);
	return result;
}

long CNHMWI::VfdFROMDisplay(long nMemIndex)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x15b, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nMemIndex);
	return result;
}

long CNHMWI::VfdSetDisplayAtPowerOn(long nSMemIndex, long nEMemIndex, long nScrolled, long nInterval)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_I4 VTS_I4;
	InvokeHelper(0x15c, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nSMemIndex, nEMemIndex, nScrolled, nInterval);
	return result;
}

CString CNHMWI::VfdGetErrorCode()
{
	CString result;
	InvokeHelper(0x15d, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

long CNHMWI::VfdClearErrorCode()
{
	long result;
	InvokeHelper(0x15e, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::VfdGetDeviceStatus()
{
	long result;
	InvokeHelper(0x15f, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::SnsInitialize()
{
	long result;
	InvokeHelper(0x160, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::SnsDeinitialize()
{
	long result;
	InvokeHelper(0x161, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::SnsClearErrorCode()
{
	long result;
	InvokeHelper(0x162, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

CString CNHMWI::SnsGetErrorCode()
{
	CString result;
	InvokeHelper(0x163, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

long CNHMWI::SnsGetDeviceStatus()
{
	long result;
	InvokeHelper(0x164, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::SnsGetOperatorSwitch()
{
	long result;
	InvokeHelper(0x165, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::SnsClearOperatorSwitch()
{
	long result;
	InvokeHelper(0x166, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::SnsGetProximity()
{
	long result;
	InvokeHelper(0x167, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::SnsClearProximity()
{
	long result;
	InvokeHelper(0x168, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::GroInitialize()
{
	long result;
	InvokeHelper(0x169, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::GroDeinitialize()
{
	long result;
	InvokeHelper(0x16a, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

CString CNHMWI::GroGetDeviceStatus()
{
	CString result;
	InvokeHelper(0x16b, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

CString CNHMWI::GroGetErrorCode()
{
	CString result;
	InvokeHelper(0x16c, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

CString CNHMWI::GroGetGiroData()
{
	CString result;
	InvokeHelper(0x16d, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

CString CNHMWI::GroGetMediaStatus()
{
	CString result;
	InvokeHelper(0x16e, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

long CNHMWI::GroAccept(long nWaitSec)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x16f, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nWaitSec);
	return result;
}

long CNHMWI::GroCancelAccept()
{
	long result;
	InvokeHelper(0x170, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::GroReadyAccept()
{
	long result;
	InvokeHelper(0x171, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::GroRead(LPCTSTR szFileName)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x172, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		szFileName);
	return result;
}

long CNHMWI::GroReject()
{
	long result;
	InvokeHelper(0x173, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::GroEscrow()
{
	long result;
	InvokeHelper(0x174, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::GroStack()
{
	long result;
	InvokeHelper(0x175, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::GroRejectAll()
{
	long result;
	InvokeHelper(0x176, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::GroEnableStatusEvents()
{
	long result;
	InvokeHelper(0x177, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::GroDisableStatusEvents()
{
	long result;
	InvokeHelper(0x178, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::GroClearErrorCode()
{
	long result;
	InvokeHelper(0x179, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

CString CNHMWI::GroGetGiroType()
{
	CString result;
	InvokeHelper(0x17a, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

long CNHMWI::GroRead2D(LPCTSTR szFileName)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x17b, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		szFileName);
	return result;
}

long CNHMWI::GiroReadOCRn2D(LPCTSTR szFileName)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x17c, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		szFileName);
	return result;
}

long CNHMWI::GiroRead2DNotGetImg(LPCTSTR szFileName)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x17d, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		szFileName);
	return result;
}

long CNHMWI::GroReadOCR(LPCTSTR szFileName)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x17e, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		szFileName);
	return result;
}

long CNHMWI::GroConvertImage()
{
	long result;
	InvokeHelper(0x17f, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::GroFreeReadOCR()
{
	long result;
	InvokeHelper(0x180, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::GroWaitForTaken(long nTimeout)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x181, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nTimeout);
	return result;
}

long CNHMWI::RfdInitialize()
{
	long result;
	InvokeHelper(0x182, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::RfdDeInitialize()
{
	long result;
	InvokeHelper(0x183, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

CString CNHMWI::RfdGetErrorCode()
{
	CString result;
	InvokeHelper(0x184, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

long CNHMWI::RfdClearErrorCode()
{
	long result;
	InvokeHelper(0x185, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::RfdSendData(short nSendCmd, LPCTSTR ReqBuf)
{
	long result;
	static BYTE parms[] =
		VTS_I2 VTS_BSTR;
	InvokeHelper(0x186, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nSendCmd, ReqBuf);
	return result;
}

CString CNHMWI::RfdGetData()
{
	CString result;
	InvokeHelper(0x187, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

CString CNHMWI::BrmGetBCDistinctionMode()
{
	CString result;
	InvokeHelper(0x188, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

long CNHMWI::SprAutoLoad()
{
	long result;
	InvokeHelper(0x189, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::SprGetMediaStatus()
{
	long result;
	InvokeHelper(0x18a, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::BrmGetCSMNoteStatus()
{
	long result;
	InvokeHelper(0x18b, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::BrmSetNoteInfo(short nNoteKind1, short nNoteKind2, short nNoteKind3, short nNoteKind4)
{
	long result;
	static BYTE parms[] =
		VTS_I2 VTS_I2 VTS_I2 VTS_I2;
	InvokeHelper(0x18c, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nNoteKind1, nNoteKind2, nNoteKind3, nNoteKind4);
	return result;
}

long CNHMWI::BrmGetNoteKindOfRB1()
{
	long result;
	InvokeHelper(0x18d, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::BrmGetNoteKindOfRB2()
{
	long result;
	InvokeHelper(0x18e, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::BrmGetNoteKindOfRB3()
{
	long result;
	InvokeHelper(0x18f, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::BrmGetNoteKindOfRB4()
{
	long result;
	InvokeHelper(0x190, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

void CNHMWI::BrmSet10000NoteUsePriority(short n10000NoteKind)
{
	static BYTE parms[] =
		VTS_I2;
	InvokeHelper(0x191, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 n10000NoteKind);
}

long CNHMWI::BrmGet10000NoteUsePriority()
{
	long result;
	InvokeHelper(0x192, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

void CNHMWI::BrmEnableDepositNote(short nNoteKind, long bEnable)
{
	static BYTE parms[] =
		VTS_I2 VTS_I4;
	InvokeHelper(0x193, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 nNoteKind, bEnable);
}

long CNHMWI::BrmGetEnabledDepositNote()
{
	long result;
	InvokeHelper(0x194, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::BrmGetLog()
{
	long result;
	InvokeHelper(0x195, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::SnsGetCallKey()
{
	long result;
	InvokeHelper(0x196, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::SnsClearCallKey()
{
	long result;
	InvokeHelper(0x197, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

CString CNHMWI::FngGetImagePath()
{
	CString result;
	InvokeHelper(0x198, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

void CNHMWI::FngSetImageSize(long width, long height)
{
	static BYTE parms[] =
		VTS_I4 VTS_I4;
	InvokeHelper(0x199, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 width, height);
}

long CNHMWI::GroReset()
{
	long result;
	InvokeHelper(0x19a, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::GroSet2DAreaFromOCR(float dx1, float dy1, float dx2, float dy2)
{
	long result;
	static BYTE parms[] =
		VTS_R4 VTS_R4 VTS_R4 VTS_R4;
	InvokeHelper(0x19b, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		dx1, dy1, dx2, dy2);
	return result;
}

long CNHMWI::GroSet2DRecogOption(float minSize, float maxSize, long tolerLaidOver, long billType)
{
	long result;
	static BYTE parms[] =
		VTS_R4 VTS_R4 VTS_I4 VTS_I4;
	InvokeHelper(0x19c, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		minSize, maxSize, tolerLaidOver, billType);
	return result;
}

CString CNHMWI::GroGetAreaLeft()
{
	CString result;
	InvokeHelper(0x19d, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

CString CNHMWI::GroGetAreaTop()
{
	CString result;
	InvokeHelper(0x19e, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

CString CNHMWI::GroGetAreaRight()
{
	CString result;
	InvokeHelper(0x19f, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

CString CNHMWI::GroGetAreaBottom()
{
	CString result;
	InvokeHelper(0x1a0, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

long CNHMWI::IcsInitialize()
{
	long result;
	InvokeHelper(0x1a1, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::IcsDeinitialize()
{
	long result;
	InvokeHelper(0x1a2, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::IcsClearErrorCode()
{
	long result;
	InvokeHelper(0x1a3, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

CString CNHMWI::IcsGetErrorCode()
{
	CString result;
	InvokeHelper(0x1a4, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

long CNHMWI::IcsGetStatus()
{
	long result;
	InvokeHelper(0x1a5, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::IcsReset(LPCTSTR Action)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x1a6, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		Action);
	return result;
}

long CNHMWI::IcsAcquire(LPCTSTR Options, long Timeout)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR VTS_I4;
	InvokeHelper(0x1a7, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		Options, Timeout);
	return result;
}

CString CNHMWI::IcsGetImagePath()
{
	CString result;
	InvokeHelper(0x1a8, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

long CNHMWI::IcsCancelAccept()
{
	long result;
	InvokeHelper(0x1a9, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::SplGetKeyValue()
{
	long result;
	InvokeHelper(0x1aa, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::IcsCardScan()
{
	long result;
	InvokeHelper(0x1ab, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::IcsWaitTaken()
{
	long result;
	InvokeHelper(0x1ac, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::BrmChangeUnitLock()
{
	long result;
	InvokeHelper(0x1ad, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::SplSetInServiceLED(LPCTSTR szOnOff)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x1ae, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		szOnOff);
	return result;
}

long CNHMWI::SplSetSuperviosrLED(LPCTSTR szOnOff)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x1af, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		szOnOff);
	return result;
}

long CNHMWI::SplSetErrorLED(LPCTSTR szOnOff)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x1b0, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		szOnOff);
	return result;
}

long CNHMWI::SplSetCommunicationsLED(LPCTSTR szOnOff)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x1b1, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		szOnOff);
	return result;
}

long CNHMWI::PinLoadEncryptedKey(LPCTSTR strKeyName, LPCTSTR strKeyValue, LPCTSTR strEncKeyName, LPCTSTR strUse)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR VTS_BSTR VTS_BSTR VTS_BSTR;
	InvokeHelper(0x1b2, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		strKeyName, strKeyValue, strEncKeyName, strUse);
	return result;
}

long CNHMWI::CduDispenseAndPresentAmount(long nAmount, long nWaitSec)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_I4;
	InvokeHelper(0x1b3, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nAmount, nWaitSec);
	return result;
}

long CNHMWI::CduDispenseAndPresentCount(long nCST1Cnt, long nCST2Cnt, long nCST3Cnt, long nCST4Cnt, long nWaitSec)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_I4 VTS_I4 VTS_I4;
	InvokeHelper(0x1b4, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nCST1Cnt, nCST2Cnt, nCST3Cnt, nCST4Cnt, nWaitSec);
	return result;
}

long CNHMWI::CduAddNumberOfCash(LPCTSTR szInitialCnt, LPCTSTR szAddCnt)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR VTS_BSTR;
	InvokeHelper(0x1b5, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		szInitialCnt, szAddCnt);
	return result;
}

long CNHMWI::CduSetValueOfCash(LPCTSTR szCashValueData, LPCTSTR szCurrencyData)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR VTS_BSTR;
	InvokeHelper(0x1b6, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		szCashValueData, szCurrencyData);
	return result;
}

long CNHMWI::CduGetLastDispensedAmount()
{
	long result;
	InvokeHelper(0x1b7, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::CduGetLastDispensedCount(long nCstNum)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x1b8, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nCstNum);
	return result;
}

long CNHMWI::CduGetShutterStatus()
{
	long result;
	InvokeHelper(0x1b9, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::SnsGetEnhancedAudio()
{
	long result;
	InvokeHelper(0x1ba, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::VfdCurtainDisplay(long nDirection, long nSpeed, long nPattern)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_I4;
	InvokeHelper(0x1bb, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nDirection, nSpeed, nPattern);
	return result;
}

long CNHMWI::SiuInitialize()
{
	long result;
	InvokeHelper(0x1bc, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::SiuDeinitialize()
{
	long result;
	InvokeHelper(0x1bd, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::SiuGetOperatorSwitchStatus()
{
	long result;
	InvokeHelper(0x1be, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::SiuClearOperatorSwitchStatus()
{
	long result;
	InvokeHelper(0x1bf, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::McrInitialize()
{
	long result;
	InvokeHelper(0x1c0, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::McrDeinitialize()
{
	long result;
	InvokeHelper(0x1c1, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::McrAcceptAndReadPassbook(long nWaitSec)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x1c2, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nWaitSec);
	return result;
}

long CNHMWI::McrAcceptAndReadCardJIS(long nWaitSec)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x1c3, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nWaitSec);
	return result;
}

long CNHMWI::McrAcceptAndReadCardISO(long nWaitSec)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x1c4, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nWaitSec);
	return result;
}

long CNHMWI::McrCancelAccept()
{
	long result;
	InvokeHelper(0x1c5, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

CString CNHMWI::McrGetErrorCode()
{
	CString result;
	InvokeHelper(0x1c6, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

long CNHMWI::McrClearErrorCode()
{
	long result;
	InvokeHelper(0x1c7, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

CString CNHMWI::McrGetReadData()
{
	CString result;
	InvokeHelper(0x1c8, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

long CNHMWI::DepInitialize()
{
	long result;
	InvokeHelper(0x1c9, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::DepDeinitialize()
{
	long result;
	InvokeHelper(0x1ca, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

CString CNHMWI::DepGetErrorCode()
{
	CString result;
	InvokeHelper(0x1cb, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

long CNHMWI::DepClearErrorCode()
{
	long result;
	InvokeHelper(0x1cc, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

CString CNHMWI::DepGetSensorInfo()
{
	CString result;
	InvokeHelper(0x1cd, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

long CNHMWI::DepGetDeviceStatus()
{
	long result;
	InvokeHelper(0x1ce, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::DepGetDepositStatus()
{
	long result;
	InvokeHelper(0x1cf, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::DepGetDepositBoxStatus()
{
	long result;
	InvokeHelper(0x1d0, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::DepGetDepositInkStatus()
{
	long result;
	InvokeHelper(0x1d1, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::DepClearDepositCount()
{
	long result;
	InvokeHelper(0x1d2, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::DepGetMaterialInfo()
{
	long result;
	InvokeHelper(0x1d3, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::DepDeposit(LPCTSTR szPrintText, long nDepWaitSec, long nRjtWaitSec)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR VTS_I4 VTS_I4;
	InvokeHelper(0x1d4, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		szPrintText, nDepWaitSec, nRjtWaitSec);
	return result;
}

long CNHMWI::DepClear()
{
	long result;
	InvokeHelper(0x1d5, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::DepCancelDeposit()
{
	long result;
	InvokeHelper(0x1d6, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::DepReject(long nWaitSec)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x1d7, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nWaitSec);
	return result;
}

long CNHMWI::DepStack(LPCTSTR szPrintText)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x1d8, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		szPrintText);
	return result;
}

long CNHMWI::DepWaitTaken()
{
	long result;
	InvokeHelper(0x1d9, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::CdpGetDeviceStatus()
{
	long result;
	InvokeHelper(0x1da, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::CdpGetMediaStatus()
{
	long result;
	InvokeHelper(0x1db, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::CdpGetStackerStatus()
{
	long result;
	InvokeHelper(0x1dc, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::CdpInitialize()
{
	long result;
	InvokeHelper(0x1dd, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::CdpDeinitialize()
{
	long result;
	InvokeHelper(0x1de, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::CdpClearErrorCode()
{
	long result;
	InvokeHelper(0x1df, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::CdpEnableEntry()
{
	long result;
	InvokeHelper(0x1e0, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::CdpDisableEntry()
{
	long result;
	InvokeHelper(0x1e1, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::CdpIssue()
{
	long result;
	InvokeHelper(0x1e2, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::CdpEjectMedia()
{
	long result;
	InvokeHelper(0x1e3, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

CString CNHMWI::CdpGetErrorCode()
{
	CString result;
	InvokeHelper(0x1e4, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

long CNHMWI::CdpReadRawData()
{
	long result;
	InvokeHelper(0x1e5, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

CString CNHMWI::CdpGetTrack1Data()
{
	CString result;
	InvokeHelper(0x1e6, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

CString CNHMWI::CdpGetTrack2Data()
{
	CString result;
	InvokeHelper(0x1e7, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

CString CNHMWI::CdpGetTrack3Data()
{
	CString result;
	InvokeHelper(0x1e8, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

long CNHMWI::CdpRetainMedia()
{
	long result;
	InvokeHelper(0x1e9, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::CdpWaitTaken()
{
	long result;
	InvokeHelper(0x1ea, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::Cdp2GetDeviceStatus()
{
	long result;
	InvokeHelper(0x1eb, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::Cdp2GetMediaStatus()
{
	long result;
	InvokeHelper(0x1ec, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::Cdp2GetStackerStatus(long nStacker)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x1ed, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nStacker);
	return result;
}

long CNHMWI::Cdp2Initialize()
{
	long result;
	InvokeHelper(0x1ee, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::Cdp2Deinitialize()
{
	long result;
	InvokeHelper(0x1ef, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::Cdp2Issue(long nStacker)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x1f0, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nStacker);
	return result;
}

long CNHMWI::Cdp2EjectMedia()
{
	long result;
	InvokeHelper(0x1f1, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

CString CNHMWI::Cdp2GetErrorCode()
{
	CString result;
	InvokeHelper(0x1f2, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

long CNHMWI::Cdp2ReadRawData(long nStacker)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x1f3, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nStacker);
	return result;
}

CString CNHMWI::Cdp2GetTrack1Data()
{
	CString result;
	InvokeHelper(0x1f4, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

CString CNHMWI::Cdp2GetTrack2Data()
{
	CString result;
	InvokeHelper(0x1f5, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

CString CNHMWI::Cdp2GetTrack3Data()
{
	CString result;
	InvokeHelper(0x1f6, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

long CNHMWI::Cdp2RetainMedia()
{
	long result;
	InvokeHelper(0x1f7, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::Cdp2ClearErrorCode()
{
	long result;
	InvokeHelper(0x1f8, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::Cdp2EnableEntry()
{
	long result;
	InvokeHelper(0x1f9, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::Cdp2DisableEntry()
{
	long result;
	InvokeHelper(0x1fa, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::Cdp3GetDeviceStatus()
{
	long result;
	InvokeHelper(0x1fb, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::Cdp3GetMediaStatus()
{
	long result;
	InvokeHelper(0x1fc, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::Cdp3GetStackerStatus(long nStacker)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x1fd, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nStacker);
	return result;
}

long CNHMWI::Cdp3Initialize()
{
	long result;
	InvokeHelper(0x1fe, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::Cdp3Deinitialize()
{
	long result;
	InvokeHelper(0x1ff, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::Cdp3Issue(long nStacker)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x200, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nStacker);
	return result;
}

long CNHMWI::Cdp3EjectMedia()
{
	long result;
	InvokeHelper(0x201, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

CString CNHMWI::Cdp3GetErrorCode()
{
	CString result;
	InvokeHelper(0x202, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

long CNHMWI::Cdp3ReadRawData(long nStacker)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x203, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nStacker);
	return result;
}

CString CNHMWI::Cdp3GetTrack1Data()
{
	CString result;
	InvokeHelper(0x204, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

CString CNHMWI::Cdp3GetTrack2Data()
{
	CString result;
	InvokeHelper(0x205, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

CString CNHMWI::Cdp3GetTrack3Data()
{
	CString result;
	InvokeHelper(0x206, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

long CNHMWI::Cdp3RetainMedia()
{
	long result;
	InvokeHelper(0x207, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::Cdp3ClearErrorCode()
{
	long result;
	InvokeHelper(0x208, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::Cdp3EnableEntry()
{
	long result;
	InvokeHelper(0x209, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::Cdp3DisableEntry()
{
	long result;
	InvokeHelper(0x20a, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::Cdp3PrintForm(LPCTSTR szFormName, LPCTSTR szFieldValues)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR VTS_BSTR;
	InvokeHelper(0x20b, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		szFormName, szFieldValues);
	return result;
}

long CNHMWI::CdpGetRetainStatus()
{
	long result;
	InvokeHelper(0x20c, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::CsmClearErrorCode()
{
	long result;
	InvokeHelper(0x20d, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::CsmInitialize(LPCTSTR szInitType)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x20e, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		szInitType);
	return result;
}

long CNHMWI::CsmDeInitialize()
{
	long result;
	InvokeHelper(0x20f, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::CsmReset(LPCTSTR szInitType)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x210, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		szInitType);
	return result;
}

CString CNHMWI::CsmGetErrorCode()
{
	CString result;
	InvokeHelper(0x211, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

CString CNHMWI::CsmGetData()
{
	CString result;
	InvokeHelper(0x212, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

long CNHMWI::CsmGetImage()
{
	long result;
	InvokeHelper(0x213, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::CsmCancelAccept()
{
	long result;
	InvokeHelper(0x214, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

CString CNHMWI::CsmGetImageType()
{
	CString result;
	InvokeHelper(0x215, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

long CNHMWI::CsmGetDeviceStatus()
{
	long result;
	InvokeHelper(0x216, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::CsmGetMediaStatus()
{
	long result;
	InvokeHelper(0x217, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::CsmGetInkStatus()
{
	long result;
	InvokeHelper(0x218, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::CsmProcessFormRead(long nTimeout)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x219, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nTimeout);
	return result;
}

long CNHMWI::CsmEjectMedia()
{
	long result;
	InvokeHelper(0x21a, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::CsmRetainMedia()
{
	long result;
	InvokeHelper(0x21b, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::CsmProcessFormWrite(LPCTSTR szEndorseData, long nTimeout)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR VTS_I4;
	InvokeHelper(0x21c, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		szEndorseData, nTimeout);
	return result;
}

long CNHMWI::BillGetStackerStatus()
{
	long result;
	InvokeHelper(0x21d, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

CString CNHMWI::BillGetCashInStatus(long nNumberOfCashIn)
{
	CString result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x21e, DISPATCH_METHOD, VT_BSTR, (void*)&result, parms,
		nNumberOfCashIn);
	return result;
}

CString CNHMWI::BillGetLogicalUnit()
{
	CString result;
	InvokeHelper(0x21f, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

long CNHMWI::BillInitialize()
{
	long result;
	InvokeHelper(0x220, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::BillDeinitialize()
{
	long result;
	InvokeHelper(0x221, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::BillEntryEnable()
{
	long result;
	InvokeHelper(0x222, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::BillAccept()
{
	long result;
	InvokeHelper(0x223, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::BillCancelAccept()
{
	long result;
	InvokeHelper(0x224, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::BillStore()
{
	long result;
	InvokeHelper(0x225, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::BillStartInitCount()
{
	long result;
	InvokeHelper(0x226, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::BillEndInitCount()
{
	long result;
	InvokeHelper(0x227, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::BillReset()
{
	long result;
	InvokeHelper(0x228, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::BillSetNoteType()
{
	long result;
	InvokeHelper(0x229, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::BillRollbackCash()
{
	long result;
	InvokeHelper(0x22a, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::BillGetNumberOfCashInStatus()
{
	long result;
	InvokeHelper(0x22b, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

CString CNHMWI::BillDevGetLastCashInStatus()
{
	CString result;
	InvokeHelper(0x22c, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

long CNHMWI::BillDevGetLastRefusedCount()
{
	long result;
	InvokeHelper(0x22d, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::BillGetDeviceStatus()
{
	long result;
	InvokeHelper(0x22e, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

CString CNHMWI::BillGetErrorCode()
{
	CString result;
	InvokeHelper(0x22f, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

long CNHMWI::BillClearErrorCode()
{
	long result;
	InvokeHelper(0x230, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::ClearEventDevice(long nDevID)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x231, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nDevID);
	return result;
}

long CNHMWI::ClearStatusDevice(long nDevID)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x232, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nDevID);
	return result;
}

long CNHMWI::GetEventDevice(long nDevID)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x233, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nDevID);
	return result;
}

long CNHMWI::GetStatusDevice(long nDevID)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x234, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nDevID);
	return result;
}

long CNHMWI::Cdp3PrintFormAndEject(LPCTSTR FrontFormName, LPCTSTR FrontFieldValues, LPCTSTR BackFormName, LPCTSTR BackFieldValues)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR VTS_BSTR VTS_BSTR VTS_BSTR;
	InvokeHelper(0x235, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		FrontFormName, FrontFieldValues, BackFormName, BackFieldValues);
	return result;
}

CString CNHMWI::CduGetCurrencyID(long nCSTNo)
{
	CString result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x236, DISPATCH_METHOD, VT_BSTR, (void*)&result, parms,
		nCSTNo);
	return result;
}

long CNHMWI::CmrStartMotionPerson(LPCTSTR szFileName, long nTime)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR VTS_I4;
	InvokeHelper(0x237, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		szFileName, nTime);
	return result;
}

long CNHMWI::CmrEndMotionPerson()
{
	long result;
	InvokeHelper(0x238, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::CmrStartMotionSlot(LPCTSTR szFileName, long nTime)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR VTS_I4;
	InvokeHelper(0x239, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		szFileName, nTime);
	return result;
}

long CNHMWI::CmrEndMotionSlot()
{
	long result;
	InvokeHelper(0x23a, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::SnsClearEnhancedAudio()
{
	long result;
	InvokeHelper(0x23b, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::TtuInitialize()
{
	long result;
	InvokeHelper(0x23c, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::TtuDeinitialize()
{
	long result;
	InvokeHelper(0x23d, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

CString CNHMWI::TtuGetErrorCode()
{
	CString result;
	InvokeHelper(0x23e, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

long CNHMWI::TtuClearErrorCode()
{
	long result;
	InvokeHelper(0x23f, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::TtuGetDeviceStatus()
{
	long result;
	InvokeHelper(0x240, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::TtuClearScreenSync()
{
	long result;
	InvokeHelper(0x241, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::TtuSetLEDSync(long LEDNumber, LPCTSTR State)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_BSTR;
	InvokeHelper(0x242, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		LEDNumber, State);
	return result;
}

long CNHMWI::TtuReadAt(long x, long y, long NumberOpChars, LPCTSTR EchoMode, LPCTSTR EchoFormat, LPCTSTR InputType, long CursorOn, long Flush, long AutoEnd, long Timeout)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_I4 VTS_BSTR VTS_BSTR VTS_BSTR VTS_I4 VTS_I4 VTS_I4 VTS_I4;
	InvokeHelper(0x243, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		x, y, NumberOpChars, EchoMode, EchoFormat, InputType, CursorOn, Flush, AutoEnd, Timeout);
	return result;
}

long CNHMWI::TtuWriteAtSync(long x, long y, LPCTSTR Format, LPCTSTR Text)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_BSTR VTS_BSTR;
	InvokeHelper(0x244, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		x, y, Format, Text);
	return result;
}

CString CNHMWI::TtuGetReadData()
{
	CString result;
	InvokeHelper(0x245, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

long CNHMWI::TtuClearAreaSync(long x, long y, long width, long Hight)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_I4 VTS_I4;
	InvokeHelper(0x246, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		x, y, width, Hight);
	return result;
}

long CNHMWI::TtuCancelRead()
{
	long result;
	InvokeHelper(0x247, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::TtuReadAtEx(long x, long y, long NumberOfChars, LPCTSTR EchoMode, LPCTSTR EchoFormat, LPCTSTR InputType, long CursorOn, long Flush, long AutoEnd, long Timeout, LPCTSTR ActiveKeys, LPCTSTR ActiveCmdKeys, LPCTSTR TerminateCmdKeys)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_I4 VTS_BSTR VTS_BSTR VTS_BSTR VTS_I4 VTS_I4 VTS_I4 VTS_I4 VTS_BSTR VTS_BSTR VTS_BSTR;
	InvokeHelper(0x248, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		x, y, NumberOfChars, EchoMode, EchoFormat, InputType, CursorOn, Flush, AutoEnd, Timeout, ActiveKeys, ActiveCmdKeys, TerminateCmdKeys);
	return result;
}

long CNHMWI::McrAcceptAndReadCardAny(long nWaitSec)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x249, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nWaitSec);
	return result;
}

long CNHMWI::GroEscrowEndorse(LPCTSTR szData)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x24a, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		szData);
	return result;
}

long CNHMWI::A4pGetRetractBinStatus()
{
	long result;
	InvokeHelper(0x24b, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::PbmMSWrite(LPCTSTR szFormName, LPCTSTR szMSData)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR VTS_BSTR;
	InvokeHelper(0x24c, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		szFormName, szMSData);
	return result;
}

long CNHMWI::Delay(long nWaitMSec)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x24d, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nWaitMSec);
	return result;
}

long CNHMWI::RunExe(LPCTSTR szPath)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x24e, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		szPath);
	return result;
}

long CNHMWI::SprPrint2(LPCTSTR szMedia, LPCTSTR szForm, LPCTSTR szData)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR VTS_BSTR VTS_BSTR;
	InvokeHelper(0x24f, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		szMedia, szForm, szData);
	return result;
}

long CNHMWI::TraceDump(LPCTSTR szData)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x250, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		szData);
	return result;
}

CString CNHMWI::CsmGetFieldData(LPCTSTR FieldName)
{
	CString result;
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x251, DISPATCH_METHOD, VT_BSTR, (void*)&result, parms,
		FieldName);
	return result;
}

long CNHMWI::DepRetract(LPCTSTR szPrintText)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x252, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		szPrintText);
	return result;
}

long CNHMWI::DepGetDepositCount()
{
	long result;
	InvokeHelper(0x253, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::MopInitialize()
{
	long result;
	InvokeHelper(0x254, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::MopDeinitialize()
{
	long result;
	InvokeHelper(0x255, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

CString CNHMWI::MopGetExtraStatus(LPCTSTR KeyName)
{
	CString result;
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x256, DISPATCH_METHOD, VT_BSTR, (void*)&result, parms,
		KeyName);
	return result;
}

long CNHMWI::MopEject(long Timeout)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x257, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		Timeout);
	return result;
}

long CNHMWI::MopCut()
{
	long result;
	InvokeHelper(0x258, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::MopReadBarCode(long Length)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x259, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		Length);
	return result;
}

long CNHMWI::MopLoadFormAndReadBarCode(long Length)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x25a, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		Length);
	return result;
}

long CNHMWI::MopPrintForm(LPCTSTR FormName, LPCTSTR FieldData)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR VTS_BSTR;
	InvokeHelper(0x25b, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		FormName, FieldData);
	return result;
}

long CNHMWI::MopUnlockFeeder(long Timeout)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x25c, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		Timeout);
	return result;
}

long CNHMWI::MopReset()
{
	long result;
	InvokeHelper(0x25d, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

CString CNHMWI::MopGetErrorCode()
{
	CString result;
	InvokeHelper(0x25e, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

long CNHMWI::MopClearErrorCode()
{
	long result;
	InvokeHelper(0x25f, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::MopGetDeviceStatus()
{
	long result;
	InvokeHelper(0x260, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::MopGetMediaStatus()
{
	long result;
	InvokeHelper(0x261, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::MopGetPaperStatus()
{
	long result;
	InvokeHelper(0x262, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

CString CNHMWI::MopGetBarCodeData()
{
	CString result;
	InvokeHelper(0x263, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

long CNHMWI::MopGetMaxFeedStepX()
{
	long result;
	InvokeHelper(0x264, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::MopGetMaxFeedStepY()
{
	long result;
	InvokeHelper(0x265, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::MopGetFeedStepX()
{
	long result;
	InvokeHelper(0x266, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::MopGetFeedStepY()
{
	long result;
	InvokeHelper(0x267, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::GenerateDeviceID(const VARIANT& DevIds)
{
	long result;
	static BYTE parms[] =
		VTS_VARIANT;
	InvokeHelper(0x268, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		&DevIds);
	return result;
}

long CNHMWI::AdaInitialize()
{
	long result;
	InvokeHelper(0x269, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::AdaDeinitialize()
{
	long result;
	InvokeHelper(0x26a, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::AdaClear()
{
	long result;
	InvokeHelper(0x26b, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::AdaPlayText(LPCTSTR szText)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x26c, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		szText);
	return result;
}

long CNHMWI::AdaSetBoardConfig(long nData, LPCTSTR szCommand)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_BSTR;
	InvokeHelper(0x26d, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nData, szCommand);
	return result;
}

long CNHMWI::CrdInitialize()
{
	long result;
	InvokeHelper(0x26e, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::CrdCIU_SetIssuingLength(long nLenType)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x26f, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nLenType);
	return result;
}

long CNHMWI::CrdCIU_Issuing()
{
	long result;
	InvokeHelper(0x270, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::CrdCIU_Request()
{
	long result;
	InvokeHelper(0x271, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::CrdCIU_Clear()
{
	long result;
	InvokeHelper(0x272, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::CrdMainProc()
{
	long result;
	InvokeHelper(0x273, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::CrdGetStatus()
{
	long result;
	InvokeHelper(0x274, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::CoinOpenConnection()
{
	long result;
	InvokeHelper(0x275, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::CoinCloseConnection()
{
	long result;
	InvokeHelper(0x276, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::CoinInitialize(long rejectPos, LPCTSTR lpszDate, LPCTSTR lpszTime)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_BSTR VTS_BSTR;
	InvokeHelper(0x277, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		rejectPos, lpszDate, lpszTime);
	return result;
}

void CNHMWI::CoinEnableStatusEvents()
{
	InvokeHelper(0x278, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

void CNHMWI::CoinDisableStatusEvents()
{
	InvokeHelper(0x279, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

long CNHMWI::CoinDispense(LPCTSTR Amount, short MixAlgorithm)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR VTS_I2;
	InvokeHelper(0x27a, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		Amount, MixAlgorithm);
	return result;
}

long CNHMWI::CoinIndividualDispense(long lAmount1, long lAmount2, long lAmount3, long lAmount4)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_I4 VTS_I4;
	InvokeHelper(0x27b, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		lAmount1, lAmount2, lAmount3, lAmount4);
	return result;
}

BOOL CNHMWI::CoinIsDispensable(LPCTSTR lpszAmount, short hMixAlgorithm)
{
	BOOL result;
	static BYTE parms[] =
		VTS_BSTR VTS_I2;
	InvokeHelper(0x27c, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		lpszAmount, hMixAlgorithm);
	return result;
}

long CNHMWI::CoinSetRemainCount(long lAmount1, long lAmount2, long lAmount3, long lAmount4)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_I4 VTS_I4;
	InvokeHelper(0x27d, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		lAmount1, lAmount2, lAmount3, lAmount4);
	return result;
}

void CNHMWI::CoinClearDispenseTotalCount()
{
	InvokeHelper(0x27e, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

long CNHMWI::CoinAccept(long bIsContinue)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x27f, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		bIsContinue);
	return result;
}

long CNHMWI::CoinCancelAccept()
{
	long result;
	InvokeHelper(0x280, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::CoinStack()
{
	long result;
	InvokeHelper(0x281, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::CoinEject()
{
	long result;
	InvokeHelper(0x282, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::CoinPresent(long Timeout)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x283, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		Timeout);
	return result;
}

long CNHMWI::CoinOpenShutter(long lShutterType)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x284, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		lShutterType);
	return result;
}

long CNHMWI::CoinCloseShutter(long lShutterType)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x285, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		lShutterType);
	return result;
}

long CNHMWI::CoinGetMaxDispCoinNum()
{
	long result;
	InvokeHelper(0x286, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::CoinGetDeviceStatus()
{
	long result;
	InvokeHelper(0x287, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::CoinGetAcceptMediaStatus()
{
	long result;
	InvokeHelper(0x288, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

CString CNHMWI::CoinGetDispCstStatus()
{
	CString result;
	InvokeHelper(0x289, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

CString CNHMWI::CoinGetAcceptCurDenom()
{
	CString result;
	InvokeHelper(0x28a, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

CString CNHMWI::CoinGetDispCurDenom()
{
	CString result;
	InvokeHelper(0x28b, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

CString CNHMWI::CoinGetAcceptCurCnt()
{
	CString result;
	InvokeHelper(0x28c, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

CString CNHMWI::CoinGetDispLastCnt()
{
	CString result;
	InvokeHelper(0x28d, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

CString CNHMWI::CoinGetDispTotalCnt()
{
	CString result;
	InvokeHelper(0x28e, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

CString CNHMWI::CoinGetDispRemainCnt()
{
	CString result;
	InvokeHelper(0x28f, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

CString CNHMWI::CoinGetErrorCode()
{
	CString result;
	InvokeHelper(0x290, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

long CNHMWI::CoinClearErrorCode()
{
	long result;
	InvokeHelper(0x291, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::CoinStartTransaction(LPCTSTR lpszDate, LPCTSTR lpszTime)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR VTS_BSTR;
	InvokeHelper(0x292, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		lpszDate, lpszTime);
	return result;
}

long CNHMWI::CoinEndTransaction()
{
	long result;
	InvokeHelper(0x293, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::CoinRetract(long lCount1, long lCount2, long lCount3, long lCount4)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_I4 VTS_I4;
	InvokeHelper(0x294, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		lCount1, lCount2, lCount3, lCount4);
	return result;
}

long CNHMWI::CoinGetIsInitialized()
{
	long result;
	InvokeHelper(0x295, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::CoinRefill()
{
	long result;
	InvokeHelper(0x296, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::CoinSetRetractCSTRemainCount(long lAmount1, long lAmount2, long lAmount3, long lAmount4, long lAmountOF, long lAmountReject)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_I4 VTS_I4 VTS_I4 VTS_I4;
	InvokeHelper(0x297, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		lAmount1, lAmount2, lAmount3, lAmount4, lAmountOF, lAmountReject);
	return result;
}

long CNHMWI::CoinGetPositionStatus()
{
	long result;
	InvokeHelper(0x298, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::CoinGetIsAcceptAreaFull()
{
	long result;
	InvokeHelper(0x299, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

CString CNHMWI::CoinGetRetractCSTRemainCount()
{
	CString result;
	InvokeHelper(0x29a, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

long CNHMWI::CoinGetAvailWithdraw()
{
	long result;
	InvokeHelper(0x29b, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::CoinGetAvailDeposit()
{
	long result;
	InvokeHelper(0x29c, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::CoinGetIsRunningDispReject()
{
	long result;
	InvokeHelper(0x29d, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::CoinGetIsRunningAutoRetract()
{
	long result;
	InvokeHelper(0x29e, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::BillGetAvailDeposit()
{
	long result;
	InvokeHelper(0x29f, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::BillNumberOfCash(long nType)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x2a0, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nType);
	return result;
}

CString CNHMWI::CoinGetRetractCurCnt()
{
	CString result;
	InvokeHelper(0x2a1, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

long CNHMWI::CoinGetEPLog(long nLogType)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x2a2, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nLogType);
	return result;
}

long CNHMWI::CoinClearEPLog(long nLogType)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x2a3, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nLogType);
	return result;
}

long CNHMWI::CoinResetUnit(long nUnitType)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x2a4, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nUnitType);
	return result;
}

long CNHMWI::CIMGetStackerStatus()
{
	long result;
	InvokeHelper(0x2a5, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

CString CNHMWI::CIMGetCashInStatus(long nNumberOfCashIn)
{
	CString result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x2a6, DISPATCH_METHOD, VT_BSTR, (void*)&result, parms,
		nNumberOfCashIn);
	return result;
}

CString CNHMWI::CIMGetLogicalUnit(long nIndex)
{
	CString result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x2a7, DISPATCH_METHOD, VT_BSTR, (void*)&result, parms,
		nIndex);
	return result;
}

long CNHMWI::CIMInitialize()
{
	long result;
	InvokeHelper(0x2a8, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::CIMDeinitialize()
{
	long result;
	InvokeHelper(0x2a9, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::CIMStartCashIn()
{
	long result;
	InvokeHelper(0x2aa, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::CIMAccept(long InsertionTimeout, long TakenTimeout)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_I4;
	InvokeHelper(0x2ab, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		InsertionTimeout, TakenTimeout);
	return result;
}

long CNHMWI::CIMCancelAccept()
{
	long result;
	InvokeHelper(0x2ac, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::CIMStore()
{
	long result;
	InvokeHelper(0x2ad, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::CIMStartInitCount()
{
	long result;
	InvokeHelper(0x2ae, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::CIMEndInitCount()
{
	long result;
	InvokeHelper(0x2af, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::CIMReset(short UnitNumber)
{
	long result;
	static BYTE parms[] =
		VTS_I2;
	InvokeHelper(0x2b0, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		UnitNumber);
	return result;
}

long CNHMWI::CIMSetNoteType()
{
	long result;
	InvokeHelper(0x2b1, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::CIMRollbackCash()
{
	long result;
	InvokeHelper(0x2b2, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::CIMGetNumberOfCashInStatus()
{
	long result;
	InvokeHelper(0x2b3, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

CString CNHMWI::CIMDevGetLastCashInStatus()
{
	CString result;
	InvokeHelper(0x2b4, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

long CNHMWI::CIMDevGetLastRefusedCount()
{
	long result;
	InvokeHelper(0x2b5, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::CIMGetDeviceStatus()
{
	long result;
	InvokeHelper(0x2b6, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

CString CNHMWI::CIMGetErrorCode()
{
	CString result;
	InvokeHelper(0x2b7, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

long CNHMWI::CIMClearErrorCode()
{
	long result;
	InvokeHelper(0x2b8, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::CIMRetract(short RetractArea)
{
	long result;
	static BYTE parms[] =
		VTS_I2;
	InvokeHelper(0x2b9, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		RetractArea);
	return result;
}

long CNHMWI::CIMGetAvailDeposit()
{
	long result;
	InvokeHelper(0x2ba, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::CIMNumberOfCash(long nType)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x2bb, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nType);
	return result;
}

long CNHMWI::IPMGetMediaInfo(long MediaID)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x2bc, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		MediaID);
	return result;
}

long CNHMWI::CIMWaitTaken()
{
	long result;
	InvokeHelper(0x2bd, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::IPMInitialize()
{
	long result;
	InvokeHelper(0x2be, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::IPMDeinitialize()
{
	long result;
	InvokeHelper(0x2bf, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::IPMGetDeviceStatus()
{
	long result;
	InvokeHelper(0x2c0, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::IPMGetMediaStatus()
{
	long result;
	InvokeHelper(0x2c1, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

CString CNHMWI::IPMGetErrorCode()
{
	CString result;
	InvokeHelper(0x2c2, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

long CNHMWI::IPMClearErrorCode()
{
	long result;
	InvokeHelper(0x2c3, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::IPMReset(LPCTSTR MediaControl, short BinNumber, long Timeout)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR VTS_I2 VTS_I4;
	InvokeHelper(0x2c4, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		MediaControl, BinNumber, Timeout);
	return result;
}

long CNHMWI::IPMMediaIn(LPCTSTR CodeLineFormat, short MaxMediaOnStacker, long ApplicationRefuse, long Timeout)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR VTS_I2 VTS_I4 VTS_I4;
	InvokeHelper(0x2c5, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		CodeLineFormat, MaxMediaOnStacker, ApplicationRefuse, Timeout);
	return result;
}

long CNHMWI::IPMCancelMediaIn()
{
	long result;
	InvokeHelper(0x2c6, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::IPMMediaInEnd(long Timeout)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x2c7, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		Timeout);
	return result;
}

long CNHMWI::IPMMediaInRollback(long Timeout)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x2c8, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		Timeout);
	return result;
}

long CNHMWI::IPMAddMediaInImageRequest(LPCTSTR Source, LPCTSTR Type, LPCTSTR ColorFormat, LPCTSTR ScanColor, LPCTSTR Path)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR VTS_BSTR VTS_BSTR VTS_BSTR VTS_BSTR;
	InvokeHelper(0x2c9, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		Source, Type, ColorFormat, ScanColor, Path);
	return result;
}

long CNHMWI::IPMClearMediaInImageRequest()
{
	long result;
	InvokeHelper(0x2ca, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::IPMPrintText(short MediaID, long Stamp, LPCTSTR PrintData)
{
	long result;
	static BYTE parms[] =
		VTS_I2 VTS_I4 VTS_BSTR;
	InvokeHelper(0x2cb, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		MediaID, Stamp, PrintData);
	return result;
}

long CNHMWI::IPMSetDestination(short MediaID, short BinNumber)
{
	long result;
	static BYTE parms[] =
		VTS_I2 VTS_I2;
	InvokeHelper(0x2cc, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		MediaID, BinNumber);
	return result;
}

long CNHMWI::IPMPresentMedia(LPCTSTR Position, long Timeout)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR VTS_I4;
	InvokeHelper(0x2cd, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		Position, Timeout);
	return result;
}

long CNHMWI::IPMRetractMedia(LPCTSTR Location, short BinNumber)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR VTS_I2;
	InvokeHelper(0x2ce, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		Location, BinNumber);
	return result;
}

long CNHMWI::CmrPreviewFace(long bOnOff, long nPositionX, long nPositionY, long nWidth, long nHeight)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_I4 VTS_I4 VTS_I4;
	InvokeHelper(0x2cf, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		bOnOff, nPositionX, nPositionY, nWidth, nHeight);
	return result;
}

CString CNHMWI::CduGetBarcodeData()
{
	CString result;
	InvokeHelper(0x2d0, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

long CNHMWI::CduClearBarcodeData()
{
	long result;
	InvokeHelper(0x2d1, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::BrmDispenseLarge(long n100000Num, long n50000Num, long n10000Num)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_I4;
	InvokeHelper(0x2d2, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		n100000Num, n50000Num, n10000Num);
	return result;
}

long CNHMWI::BrmGetNumberOf50000Cash()
{
	long result;
	InvokeHelper(0x2d3, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::BrmAcceptLarge(long nCashCnt, long nCashAmt)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_I4;
	InvokeHelper(0x2d4, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nCashCnt, nCashAmt);
	return result;
}

long CNHMWI::CduDispenseLarge(long n50000Cnt, long n10000Cnt, long nCheckCnt)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_I4;
	InvokeHelper(0x2d5, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		n50000Cnt, n10000Cnt, nCheckCnt);
	return result;
}

long CNHMWI::BrmGetLargeMoneySupport()
{
	long result;
	InvokeHelper(0x2d6, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::BrmGetRecycleBox50000Status()
{
	long result;
	InvokeHelper(0x2d7, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::BrmGetClerkRJBStatus()
{
	long result;
	InvokeHelper(0x2d8, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::CodInitialize()
{
	long result;
	InvokeHelper(0x2d9, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::CodDeinitialize()
{
	long result;
	InvokeHelper(0x2da, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::CodOpenShutter()
{
	long result;
	InvokeHelper(0x2db, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::CodCloseShutter()
{
	long result;
	InvokeHelper(0x2dc, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::CodWaitTaken()
{
	long result;
	InvokeHelper(0x2dd, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::CodCancelWaitTaken()
{
	long result;
	InvokeHelper(0x2de, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::CodRetract()
{
	long result;
	InvokeHelper(0x2df, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::CodDispenseCount(long nCST1Cnt, long nCST2Cnt, long nCST3Cnt, long nCST4Cnt)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_I4 VTS_I4;
	InvokeHelper(0x2e0, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nCST1Cnt, nCST2Cnt, nCST3Cnt, nCST4Cnt);
	return result;
}

CString CNHMWI::CodGetDispenseOfCST(long nAmount)
{
	CString result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x2e1, DISPATCH_METHOD, VT_BSTR, (void*)&result, parms,
		nAmount);
	return result;
}

long CNHMWI::CodDispenseAmount(long nAmount)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x2e2, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nAmount);
	return result;
}

long CNHMWI::CodPresent(long nWaitSec)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x2e3, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nWaitSec);
	return result;
}

CString CNHMWI::CodGetErrorCode()
{
	CString result;
	InvokeHelper(0x2e4, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

CString CNHMWI::CodGetSensorInfo()
{
	CString result;
	InvokeHelper(0x2e5, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

long CNHMWI::CodGetDeviceStatus()
{
	long result;
	InvokeHelper(0x2e6, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::CodGetPosition(long nCduType)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x2e7, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nCduType);
	return result;
}

long CNHMWI::CodGetRejectCSTStatus()
{
	long result;
	InvokeHelper(0x2e8, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::CodGetRecycleBoxStatus()
{
	long result;
	InvokeHelper(0x2e9, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::CodGetCSTStatus(long nType)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x2ea, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nType);
	return result;
}

long CNHMWI::CodGetNumberOfCST()
{
	long result;
	InvokeHelper(0x2eb, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::CodGetValueOfCash(long nCSTNo)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x2ec, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nCSTNo);
	return result;
}

long CNHMWI::CodGetNumberOfCash(long nCSTNo)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x2ed, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nCSTNo);
	return result;
}

long CNHMWI::CodGetNumberOfSetCash(long nCSTNo)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x2ee, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nCSTNo);
	return result;
}

long CNHMWI::CodGetMaterialInfo()
{
	long result;
	InvokeHelper(0x2ef, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::CodGetAvailWithdraw()
{
	long result;
	InvokeHelper(0x2f0, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::CodClearErrorCode()
{
	long result;
	InvokeHelper(0x2f1, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::CodSetNumberOfCash(LPCTSTR szCashCntData)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x2f2, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		szCashCntData);
	return result;
}

long CNHMWI::CodSetMinMaxCST(LPCTSTR szMinCntData, LPCTSTR szMaxCntData)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR VTS_BSTR;
	InvokeHelper(0x2f3, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		szMinCntData, szMaxCntData);
	return result;
}

long CNHMWI::CodDispenseCashCheckCount(long nCashCnt, long nCheckCnt)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_I4;
	InvokeHelper(0x2f4, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nCashCnt, nCheckCnt);
	return result;
}

long CNHMWI::CodDispenseAndPresentAmount(long nAmount, long nWaitSec)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_I4;
	InvokeHelper(0x2f5, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nAmount, nWaitSec);
	return result;
}

long CNHMWI::CodDispenseAndPresentCount(long nCST1Cnt, long nCST2Cnt, long nCST3Cnt, long nCST4Cnt, long nWaitSec)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_I4 VTS_I4 VTS_I4;
	InvokeHelper(0x2f6, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nCST1Cnt, nCST2Cnt, nCST3Cnt, nCST4Cnt, nWaitSec);
	return result;
}

long CNHMWI::CodAddNumberOfCash(LPCTSTR szInitialCnt, LPCTSTR szAddCnt)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR VTS_BSTR;
	InvokeHelper(0x2f7, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		szInitialCnt, szAddCnt);
	return result;
}

long CNHMWI::CodSetValueOfCash(LPCTSTR szCashValueData, LPCTSTR szCurrencyData)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR VTS_BSTR;
	InvokeHelper(0x2f8, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		szCashValueData, szCurrencyData);
	return result;
}

long CNHMWI::CodGetLastDispensedAmount()
{
	long result;
	InvokeHelper(0x2f9, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::CodGetLastDispensedCount(long nCstNum)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x2fa, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nCstNum);
	return result;
}

long CNHMWI::CodGetShutterStatus()
{
	long result;
	InvokeHelper(0x2fb, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

CString CNHMWI::CodGetCurrencyID(long nCSTNo)
{
	CString result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x2fc, DISPATCH_METHOD, VT_BSTR, (void*)&result, parms,
		nCSTNo);
	return result;
}

long CNHMWI::CIMGetNumberOfItemType()
{
	long result;
	InvokeHelper(0x2fd, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

CString CNHMWI::PbmGetInkStatus()
{
	CString result;
	InvokeHelper(0x2fe, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

long CNHMWI::CmrCaptureRoom(LPCTSTR lpszCamData)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x2ff, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		lpszCamData);
	return result;
}

long CNHMWI::CmrGetRoomCameraStatus()
{
	long result;
	InvokeHelper(0x300, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

CString CNHMWI::VfdGetDeviceType()
{
	CString result;
	InvokeHelper(0x301, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

long CNHMWI::ScrSetDisplayDataW(LPCTSTR wszDataName, LPCTSTR wszDataValue)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR VTS_BSTR;
	InvokeHelper(0x302, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		wszDataName, wszDataValue);
	return result;
}

long CNHMWI::SprPrintW(LPCTSTR szFormName, LPCTSTR szMediaName, LPCTSTR szPrintData)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR VTS_BSTR VTS_BSTR;
	InvokeHelper(0x303, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		szFormName, szMediaName, szPrintData);
	return result;
}

long CNHMWI::IPMSetGuidLight(short LightIndex, long Command)
{
	long result;
	static BYTE parms[] =
		VTS_I2 VTS_I4;
	InvokeHelper(0x304, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		LightIndex, Command);
	return result;
}

long CNHMWI::IPMGetAcceptorStatus()
{
	long result;
	InvokeHelper(0x305, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::IPMGetStackerStatus()
{
	long result;
	InvokeHelper(0x306, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::IPMGetNumOfBinCount()
{
	long result;
	InvokeHelper(0x307, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

CString CNHMWI::IPMGetBinCount()
{
	CString result;
	InvokeHelper(0x308, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

CString CNHMWI::IPMGetBinStatus()
{
	CString result;
	InvokeHelper(0x309, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

long CNHMWI::IPMGetMediaOnStacker()
{
	long result;
	InvokeHelper(0x30a, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::IPMGetLastMediaInTotal()
{
	long result;
	InvokeHelper(0x30b, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::IPMGetLastMediaAddedToStacker()
{
	long result;
	InvokeHelper(0x30c, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::IPMGetTotalItems()
{
	long result;
	InvokeHelper(0x30d, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::IPMGetTotalItemsRefused()
{
	long result;
	InvokeHelper(0x30e, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

CString CNHMWI::IPMGetMediaImageStatus()
{
	CString result;
	InvokeHelper(0x30f, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

CString CNHMWI::IPMGetMediaImageFile()
{
	CString result;
	InvokeHelper(0x310, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

long CNHMWI::IPMGetMediaNumOfImage()
{
	long result;
	InvokeHelper(0x311, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::IPMGetGuidLightsType(short GuidLightIndex)
{
	long result;
	static BYTE parms[] =
		VTS_I2;
	InvokeHelper(0x312, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		GuidLightIndex);
	return result;
}

long CNHMWI::IPMCountMoney()
{
	long result;
	InvokeHelper(0x313, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::CIMCountMoney()
{
	long result;
	InvokeHelper(0x314, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::IPMWaitTaken()
{
	long result;
	InvokeHelper(0x315, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::CIMClearDepositCount()
{
	long result;
	InvokeHelper(0x316, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::IPMClearDepositCount()
{
	long result;
	InvokeHelper(0x317, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::IPMGetInkStatus()
{
	long result;
	InvokeHelper(0x318, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::IPMGetTonerStatus()
{
	long result;
	InvokeHelper(0x319, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::BrmCancelRefill()
{
	long result;
	InvokeHelper(0x31a, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::BrmCancelTakeup()
{
	long result;
	InvokeHelper(0x31b, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::GroOpenShutter(long nWaitSec)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x31c, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nWaitSec);
	return result;
}

long CNHMWI::GroCloseShutter(long nWaitSec)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x31d, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nWaitSec);
	return result;
}

long CNHMWI::GroGetCSTStatus()
{
	long result;
	InvokeHelper(0x31e, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::UcmOpenShutterAndTray(long nWaitSec)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x31f, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nWaitSec);
	return result;
}

long CNHMWI::GroOpenShutterAndTray(long nWaitSec)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x320, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nWaitSec);
	return result;
}

long CNHMWI::SprEjectBoth(long nWaitSec)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x321, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nWaitSec);
	return result;
}

long CNHMWI::McuEjectBoth(long nWaitSec)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x322, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nWaitSec);
	return result;
}

CString CNHMWI::GetEventValue(long nDevID)
{
	CString result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x323, DISPATCH_METHOD, VT_BSTR, (void*)&result, parms,
		nDevID);
	return result;
}

long CNHMWI::ICMMcuEntryDisable()
{
	long result;
	InvokeHelper(0x324, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

CString CNHMWI::ICMMcuGetCardData(long lDoNotUnPack)
{
	CString result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x325, DISPATCH_METHOD, VT_BSTR, (void*)&result, parms,
		lDoNotUnPack);
	return result;
}

long CNHMWI::ICMMcuInitialize()
{
	long result;
	InvokeHelper(0x326, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::ICMMcuRead()
{
	long result;
	InvokeHelper(0x327, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::ICMMcuRetract()
{
	long result;
	InvokeHelper(0x328, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::ICMMcuWrite(LPCTSTR szTrackData)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x329, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		szTrackData);
	return result;
}

long CNHMWI::ICMMcuDeinitialize()
{
	long result;
	InvokeHelper(0x32a, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::ICMMcuWaitTaken()
{
	long result;
	InvokeHelper(0x32b, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::ICMMcuEntryEnable(long nWaitSec)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x32c, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nWaitSec);
	return result;
}

long CNHMWI::ICMMcuGetMaterialInfo()
{
	long result;
	InvokeHelper(0x32d, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::ICMMcuEject(long nWaitSec)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x32e, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nWaitSec);
	return result;
}

long CNHMWI::ICMMcuEjectBoth(long nWaitSec)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x32f, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nWaitSec);
	return result;
}

long CNHMWI::ICMMcuGetDeviceStatus()
{
	long result;
	InvokeHelper(0x330, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::ICMMcuCancelWaitTaken()
{
	long result;
	InvokeHelper(0x331, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

CString CNHMWI::ICMMcuGetErrorCode()
{
	CString result;
	InvokeHelper(0x332, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

long CNHMWI::ICMMcuClearErrorCode()
{
	long result;
	InvokeHelper(0x333, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

CString CNHMWI::ICMMcuGetSensorInfo()
{
	CString result;
	InvokeHelper(0x334, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

long CNHMWI::ICMMcuClearRetractCnt()
{
	long result;
	InvokeHelper(0x335, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

CString CNHMWI::ICMMcuGetRetractCnt()
{
	CString result;
	InvokeHelper(0x336, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

CString CNHMWI::ICMMcuGetICData()
{
	CString result;
	InvokeHelper(0x337, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

long CNHMWI::ICMMcuICEntryEnable(long nWaitSec)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x338, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nWaitSec);
	return result;
}

long CNHMWI::ICMMcuICEntryDisable()
{
	long result;
	InvokeHelper(0x339, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::ICMMcuICSendData(long ProtocolID, LPCTSTR szSendData, long nWaitSec)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_BSTR VTS_I4;
	InvokeHelper(0x33a, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		ProtocolID, szSendData, nWaitSec);
	return result;
}

long CNHMWI::ICMMcuICChipInitialize()
{
	long result;
	InvokeHelper(0x33b, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

void CNHMWI::AboutBox()
{
	InvokeHelper(0xfffffdd8, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}
