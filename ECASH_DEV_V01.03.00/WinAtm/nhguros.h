#if !defined(AFX_NHGUROS_H__1579358A_A938_4D6E_97DD_7ECECA1A8903__INCLUDED_)
#define AFX_NHGUROS_H__1579358A_A938_4D6E_97DD_7ECECA1A8903__INCLUDED_

#if _MSC_VER > 1000
#pragma once
#endif // _MSC_VER > 1000
// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.

/////////////////////////////////////////////////////////////////////////////
// CNHGuros wrapper class

class CNHGuros : public CWnd
{
protected:
	DECLARE_DYNCREATE(CNHGuros)
public:
	CLSID const& GetClsid()
	{
		static CLSID const clsid
			= { 0xe57f3726, 0xb36c, 0x49bd, { 0x90, 0x5, 0x60, 0x85, 0xa5, 0x1f, 0xe3, 0x80 } };
		return clsid;
	}
	virtual BOOL Create(LPCTSTR lpszClassName,
		LPCTSTR lpszWindowName, DWORD dwStyle,
		const RECT& rect,
		CWnd* pParentWnd, UINT nID,
		CCreateContext* pContext = NULL)
	{ return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID); }

    BOOL Create(LPCTSTR lpszWindowName, DWORD dwStyle,
		const RECT& rect, CWnd* pParentWnd, UINT nID,
		CFile* pPersist = NULL, BOOL bStorage = FALSE,
		BSTR bstrLicKey = NULL)
	{ return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID,
		pPersist, bStorage, bstrLicKey); }

// Attributes
public:
	CString GetGiroCode();
	void SetGiroCode(LPCTSTR);
	CString GetMoneyCode();
	void SetMoneyCode(LPCTSTR);
	CString GetChargeCode();
	void SetChargeCode(LPCTSTR);
	CString GetGiroOrganCode();
	void SetGiroOrganCode(LPCTSTR);
	CString GetPayerNo();
	void SetPayerNo(LPCTSTR);
	CString GetImageCode();
	void SetImageCode(LPCTSTR);
	CString GetTranAmount();
	void SetTranAmount(LPCTSTR);
	CString GetPayTerm();
	void SetPayTerm(LPCTSTR);
	CString GetOcrName();
	void SetOcrName(LPCTSTR);
	CString GetEditTranAmount();
	void SetEditTranAmount(LPCTSTR);
	CString GetCity();
	void SetCity(LPCTSTR);
	CString GetTax();
	void SetTax(LPCTSTR);
	CString GetWater();
	void SetWater(LPCTSTR);
	CString GetScreenAccount();
	void SetScreenAccount(LPCTSTR);
	CString GetOcrStream();
	void SetOcrStream(LPCTSTR);
	BOOL GetBCheckDate();
	void SetBCheckDate(BOOL);
	CString GetZoneCode();
	void SetZoneCode(LPCTSTR);
	CString GetZoneCodeMsg();
	void SetZoneCodeMsg(LPCTSTR);
	CString GetRejectReason();
	void SetRejectReason(LPCTSTR);
	BOOL GetBrokenImage();
	void SetBrokenImage(BOOL);
	CString GetRejectReasonCode();
	void SetRejectReasonCode(LPCTSTR);
	BOOL GetCheckDigitPermit();
	void SetCheckDigitPermit(BOOL);
	BOOL GetCheckDigitBreak();
	void SetCheckDigitBreak(BOOL);
	BOOL GetSeoulGiro();
	void SetSeoulGiro(BOOL);
	CString GetVersion();
	void SetVersion(LPCTSTR);
	BOOL GetPusanGiro();
	void SetPusanGiro(BOOL);
	CString GetCurrentJournalPath();
	void SetCurrentJournalPath(LPCTSTR);
	CString GetBackupPath();
	void SetBackupPath(LPCTSTR);
	BOOL GetOurRange();
	void SetOurRange(BOOL);
	CString GetAccountItem();
	void SetAccountItem(LPCTSTR);
	CString GetBeforeAfter();
	void SetBeforeAfter(LPCTSTR);
	CString GetPayTermOver();
	void SetPayTermOver(LPCTSTR);
	CString GetTranAmountOver();
	void SetTranAmountOver(LPCTSTR);
	CString GetAboutRange();
	void SetAboutRange(LPCTSTR);
	long GetNotAccept();
	void SetNotAccept(long);
	long GetCheckCDResult();
	void SetCheckCDResult(long);
	BOOL GetDeaguGiro();
	void SetDeaguGiro(BOOL);
	CString GetFloatType();
	void SetFloatType(LPCTSTR);
	CString GetEtcCode();
	void SetEtcCode(LPCTSTR);

// Operations
public:
	BOOL SetGiroData(LPCTSTR m_GiroData);
	CString AddString(LPCTSTR src, LPCTSTR dest, long slen, LPCTSTR dBuff);
	long ImageCopy(LPCTSTR sourcename, LPCTSTR destinationName);
	CString EditAmount(LPCTSTR src);
	CString AddMonth(LPCTSTR strDate);
	long CardDataCheck(LPCTSTR Iso2Str, LPCTSTR Iso3Str);
	long McrDataCheck(LPCTSTR Iso2Str, LPCTSTR Iso3Str);
	long PassbookDataCheck(LPCTSTR PbStr);
	void StreamDump(LPCTSTR HexaStr, long slen);
	void PinNumberSet(LPCTSTR pinNumber);
	void InitializeAp();
	void PhoneNoSet(LPCTSTR phone);
	CString makeTransmit();
	void MicrAmountSet(LPCTSTR micrAmount);
	void BrokenImageAmountSet(LPCTSTR nAmount);
	BOOL GetNetStatus();
	CString GetCurrentDateTime();
	CString GetCurrentEJDir();
	CString makeHanaTransmit();
	CString SQLSelect(short ObjKind, LPCTSTR Code);
	BOOL SQLInsert(short ObjKind, LPCTSTR Code, LPCTSTR Name);
	BOOL SQLDelete(short ObjKind, LPCTSTR Code);
	BOOL SQLUpdate(short ObjKind, LPCTSTR Code, LPCTSTR Name);
	long makeJournalPath(LPCTSTR journalRootDir);
	CString makeBackUpPath(LPCTSTR backupRootDir);
	CString FindOrganCode(LPCTSTR OrganCode);
	long DeleteImgFile(LPCTSTR szFilename);
	long SetRegInfo(LPCTSTR szSetKeyName, LPCTSTR szSetDataName, LPCTSTR szSetDataValue);
	CString GetRegInfo(LPCTSTR ValueName, LPCTSTR PathName);
	CString SelectedLocation();
	CString ReadSelectedLocation();
	BOOL CheckFileSize(LPCTSTR strFileName, long IMaxSize);
};

//{{AFX_INSERT_LOCATION}}
// Microsoft Visual C++ will insert additional declarations immediately before the previous line.

#endif // !defined(AFX_NHGUROS_H__1579358A_A938_4D6E_97DD_7ECECA1A8903__INCLUDED_)
